{
  "reflection": [
    {
      "type": "[B"
    },
    {
      "type": "[C"
    },
    {
      "type": "[D"
    },
    {
      "type": "[F"
    },
    {
      "type": "[I"
    },
    {
      "type": "[J"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
    },
    {
      "type": "[Ljava.io.File;"
    },
    {
      "type": "[Ljava.lang.Boolean;"
    },
    {
      "type": "[Ljava.lang.Byte;"
    },
    {
      "type": "[Ljava.lang.Character;"
    },
    {
      "type": "[Ljava.lang.Class;"
    },
    {
      "type": "[Ljava.lang.Double;"
    },
    {
      "type": "[Ljava.lang.Float;"
    },
    {
      "type": "[Ljava.lang.Integer;"
    },
    {
      "type": "[Ljava.lang.Long;"
    },
    {
      "type": "[Ljava.lang.Object;"
    },
    {
      "type": "[Ljava.lang.Short;"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[Ljava.lang.annotation.Annotation;"
    },
    {
      "type": "[Ljava.lang.reflect.Field;"
    },
    {
      "type": "[Ljava.lang.reflect.Method;"
    },
    {
      "type": "[Ljava.math.BigDecimal;"
    },
    {
      "type": "[Ljava.math.BigInteger;"
    },
    {
      "type": "[Ljava.net.URL;"
    },
    {
      "type": "[Ljava.rmi.server.ObjID;"
    },
    {
      "type": "[Ljava.sql.Date;"
    },
    {
      "type": "[Ljava.sql.Time;"
    },
    {
      "type": "[Ljava.sql.Timestamp;"
    },
    {
      "type": "[Ljava.util.Calendar;"
    },
    {
      "type": "[Ljava.util.Date;"
    },
    {
      "type": "[Ljavax.management.openmbean.CompositeData;"
    },
    {
      "type": "[Lorg.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure;"
    },
    {
      "type": "[Lorg.springframework.boot.actuate.web.mappings.reactive.RequestMappingConditionsDescription$MediaTypeExpressionDescription;"
    },
    {
      "type": "[Lorg.springframework.boot.actuate.web.mappings.reactive.RequestMappingConditionsDescription$NameValueExpressionDescription;"
    },
    {
      "type": "[Lorg.springframework.core.annotation.AnnotationAttributes;"
    },
    {
      "type": "[Lorg.springframework.jmx.export.metadata.ManagedOperationParameter;"
    },
    {
      "type": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
    },
    {
      "type": "[S"
    },
    {
      "type": "[Z"
    },
    {
      "type": "android.app.Application"
    },
    {
      "type": "boolean"
    },
    {
      "type": "brave.Tracer"
    },
    {
      "type": "ch.qos.logback.classic.BasicConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.LoggerContext"
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.DateConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.KeyValuePairConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.LevelConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.LoggerConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.MessageConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.ThreadConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "co.elastic.clients.elasticsearch.ElasticsearchClient"
    },
    {
      "type": "co.elastic.clients.transport.ElasticsearchTransport"
    },
    {
      "type": "com.aayushatharva.brotli4j.Brotli4jLoader"
    },
    {
      "type": "com.couchbase.client.java.Bucket"
    },
    {
      "type": "com.couchbase.client.java.Cluster"
    },
    {
      "type": "com.datastax.oss.driver.api.core.CqlSession"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonFactory"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator"
    },
    {
      "type": "com.fasterxml.jackson.core.ObjectCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.TreeCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.Versioned"
    },
    {
      "type": "com.fasterxml.jackson.core.type.TypeReference"
    },
    {
      "type": "com.fasterxml.jackson.databind.Module",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleModule",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
    },
    {
      "type": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Cache"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Caffeine"
    },
    {
      "type": "com.github.zafarkhaja.semver.Version"
    },
    {
      "type": "com.google.gson.Gson",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.gson.GsonBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.protobuf.ExtensionRegistry",
      "methods": [
        {
          "name": "getEmptyRegistry",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.google.protobuf.Message"
    },
    {
      "type": "com.hazelcast.core.Hazelcast"
    },
    {
      "type": "com.hazelcast.core.HazelcastInstance"
    },
    {
      "type": "com.hazelcast.spring.cache.HazelcastCache"
    },
    {
      "type": "com.ibm.lang.management.OperatingSystemMXBean"
    },
    {
      "type": "com.intellij.rt.execution.application.AppMainV2$Agent",
      "methods": [
        {
          "name": "premain",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.instrument.Instrumentation"
          ]
        }
      ]
    },
    {
      "type": "com.mongodb.MongoClientSettings"
    },
    {
      "type": "com.mongodb.client.MongoClient"
    },
    {
      "type": "com.mongodb.reactivestreams.client.MongoClient"
    },
    {
      "type": "com.querydsl.core.Query"
    },
    {
      "type": "com.rabbitmq.client.Channel"
    },
    {
      "type": "com.rabbitmq.client.ConnectionFactory"
    },
    {
      "type": "com.samskivert.mustache.Mustache"
    },
    {
      "type": "com.samskivert.mustache.Template"
    },
    {
      "type": "com.sendgrid.SendGrid"
    },
    {
      "type": "com.sun.crypto.provider.AESCipher$General",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ARCFOURCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.ChaCha20Cipher$ChaCha20Poly1305",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DESedeCipher",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.DHParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.TlsMasterSecretGenerator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.jmx.mbeanserver.JmxMBeanServer",
      "allDeclaredFields": true
    },
    {
      "type": "com.sun.jmx.mbeanserver.SunJmxMBeanServer"
    },
    {
      "type": "com.sun.jndi.dns.DnsContextFactory"
    },
    {
      "type": "com.sun.management.GarbageCollectionNotificationInfo"
    },
    {
      "type": "com.sun.management.GarbageCollectorMXBean"
    },
    {
      "type": "com.sun.management.GcInfo",
      "fields": [
        {
          "name": "builder"
        },
        {
          "name": "extAttributes"
        }
      ]
    },
    {
      "type": "com.sun.management.HotSpotDiagnosticMXBean"
    },
    {
      "type": "com.sun.management.OperatingSystemMXBean",
      "methods": [
        {
          "name": "getProcessCpuLoad",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.management.ThreadMXBean"
    },
    {
      "type": "com.sun.management.UnixOperatingSystemMXBean"
    },
    {
      "type": "com.sun.management.VMOption"
    },
    {
      "type": "com.sun.management.internal.GarbageCollectorExtImpl"
    },
    {
      "type": "com.sun.management.internal.HotSpotDiagnostic"
    },
    {
      "type": "com.sun.management.internal.HotSpotThreadImpl"
    },
    {
      "type": "com.sun.management.internal.OperatingSystemImpl"
    },
    {
      "type": "com.unboundid.ldap.listener.InMemoryDirectoryServer"
    },
    {
      "type": "com.wavefront.sdk.common.WavefrontSender"
    },
    {
      "type": "com.wavefront.sdk.common.application.ApplicationTags"
    },
    {
      "type": "com.zaxxer.hikari.HikariDataSource"
    },
    {
      "type": "feign.Headers"
    },
    {
      "type": "feign.Param"
    },
    {
      "type": "feign.RequestLine"
    },
    {
      "type": "freemarker.template.Configuration"
    },
    {
      "type": "graphql.GraphQL"
    },
    {
      "type": "groovy.lang.MetaClass"
    },
    {
      "type": "groovy.text.TemplateEngine"
    },
    {
      "type": "groovy.text.markup.MarkupTemplateEngine"
    },
    {
      "type": "io.camunda.rpa.runtime.ApplicationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.RpaRuntimeJavaPocApplication",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "io",
          "parameterTypes": []
        },
        {
          "name": "ioWorkerPool",
          "parameterTypes": []
        },
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        },
        {
          "name": "robotWorkerPool",
          "parameterTypes": []
        },
        {
          "name": "sys",
          "parameterTypes": []
        },
        {
          "name": "webClient",
          "parameterTypes": [
            "org.springframework.web.reactive.function.client.WebClient$Builder"
          ]
        },
        {
          "name": "xdg",
          "parameterTypes": [
            "net.poundex.xmachinery.fio.sys.Sys"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.RpaRuntimeJavaPocApplication$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.RpaRuntimeJavaPocApplication$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.RpaRuntimeJavaPocApplication$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.pexec.ProcessService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.concurrent.ExecutorService"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.python.PythonProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.nio.file.Path"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "java.nio.file.Path",
            "java.net.URI"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.python.PythonProvisioner",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "io.camunda.rpa.runtime.python.PythonProperties",
            "net.poundex.xmachinery.fio.io.IO",
            "io.camunda.rpa.runtime.pexec.ProcessService",
            "org.springframework.web.reactive.function.client.WebClient",
            "java.util.concurrent.ExecutorService"
          ]
        },
        {
          "name": "init",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.python.PythonService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "io.camunda.rpa.runtime.python.PythonProperties"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.robot.RobotService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "net.poundex.xmachinery.fio.io.IO",
            "java.util.concurrent.ExecutorService",
            "com.fasterxml.jackson.databind.ObjectMapper",
            "io.camunda.rpa.runtime.python.PythonService",
            "io.camunda.rpa.runtime.pexec.ProcessService"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.script.ScriptManager",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "io.camunda.rpa.runtime.script.ScriptProperties",
            "net.poundex.xmachinery.fio.io.IO",
            "java.util.concurrent.ExecutorService"
          ]
        },
        {
          "name": "init",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.script.ScriptProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.nio.file.Path"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.script.api.ScriptController",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "io.camunda.rpa.runtime.script.ScriptManager",
            "io.camunda.rpa.runtime.robot.RobotService"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.secrets.AuthClient"
    },
    {
      "type": "io.camunda.rpa.runtime.secrets.AuthClient$AuthenticationRequest",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "audience",
          "parameterTypes": []
        },
        {
          "name": "client_id",
          "parameterTypes": []
        },
        {
          "name": "client_secret",
          "parameterTypes": []
        },
        {
          "name": "grant_type",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.secrets.AuthClient$AuthenticationResponse",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "int"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.secrets.SecretsClient"
    },
    {
      "type": "io.camunda.rpa.runtime.secrets.SecretsClientConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "authClient",
          "parameterTypes": [
            "org.springframework.web.reactive.function.client.WebClient$Builder"
          ]
        },
        {
          "name": "secretsClient",
          "parameterTypes": [
            "org.springframework.web.reactive.function.client.WebClient$Builder"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.secrets.SecretsClientConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.secrets.SecretsClientConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.secrets.SecretsClientConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.secrets.SecretsService",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "io.camunda.rpa.runtime.secrets.AuthClient",
            "io.camunda.rpa.runtime.secrets.ZeebeAuthProperties",
            "io.camunda.rpa.runtime.secrets.SecretsClient"
          ]
        },
        {
          "name": "init",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.secrets.ZeebeAuthProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.zeebe.ZeebeJobWorkerManager",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "io.camunda.rpa.runtime.script.ScriptManager",
            "io.camunda.zeebe.client.ZeebeClient",
            "io.camunda.rpa.runtime.zeebe.ZeebeProperties",
            "io.camunda.rpa.runtime.ApplicationProperties",
            "io.camunda.rpa.runtime.robot.RobotService",
            "io.camunda.rpa.runtime.secrets.SecretsService"
          ]
        },
        {
          "name": "destroy",
          "parameterTypes": []
        },
        {
          "name": "init",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.zeebe.ZeebeProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.client.ZeebeClient"
    },
    {
      "type": "io.camunda.zeebe.client.ZeebeClientConfiguration"
    },
    {
      "type": "io.camunda.zeebe.client.api.JsonMapper"
    },
    {
      "type": "io.camunda.zeebe.client.api.command.CompleteJobCommandStep1"
    },
    {
      "type": "io.camunda.zeebe.client.api.response.ActivatedJob"
    },
    {
      "type": "io.camunda.zeebe.client.api.worker.BackoffSupplier"
    },
    {
      "type": "io.camunda.zeebe.client.api.worker.JobClient"
    },
    {
      "type": "io.camunda.zeebe.client.api.worker.JobHandler"
    },
    {
      "type": "io.camunda.zeebe.client.api.worker.JobWorker"
    },
    {
      "type": "io.camunda.zeebe.client.api.worker.JobWorkerBuilderStep1"
    },
    {
      "type": "io.camunda.zeebe.client.api.worker.JobWorkerBuilderStep1$JobWorkerBuilderStep2"
    },
    {
      "type": "io.camunda.zeebe.client.api.worker.JobWorkerBuilderStep1$JobWorkerBuilderStep3"
    },
    {
      "type": "io.camunda.zeebe.client.impl.ZeebeClientCredentials",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getAccessToken",
          "parameterTypes": []
        },
        {
          "name": "getExpiry",
          "parameterTypes": []
        },
        {
          "name": "getTokenType",
          "parameterTypes": []
        },
        {
          "name": "setExpiresIn",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setExpiry",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.client.impl.ZeebeClientImpl",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.client.impl.ZeebeObjectMapper",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.client.impl.oauth.OAuthCredentialsCache$OAuthCachedCredentials",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.Map"
          ]
        },
        {
          "name": "getCredentials",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.client.impl.worker.ExponentialBackoff",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.actuator.MicrometerMetricsRecorder",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.actuator.ZeebeClientHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.annotation.customizer.ZeebeWorkerValueCustomizer"
    },
    {
      "type": "io.camunda.zeebe.spring.client.annotation.processor.AbstractZeebeAnnotationProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.annotation.processor.ZeebeAnnotationProcessorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.annotation.processor.ZeebeDeploymentAnnotationProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.annotation.processor.ZeebeWorkerAnnotationProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.annotation.value.ZeebeAnnotationValue"
    },
    {
      "type": "io.camunda.zeebe.spring.client.annotation.value.ZeebeWorkerValue",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setAutoComplete",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.AnnotationProcessorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "deploymentPostProcessor",
          "parameterTypes": []
        },
        {
          "name": "zeebeAnnotationProcessorRegistry",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "zeebeClientEventListener",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.annotation.processor.ZeebeAnnotationProcessorRegistry"
          ]
        },
        {
          "name": "zeebeWorkerPostProcessor",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.jobhandling.JobWorkerManager",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.CamundaAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "zeebeLifecycleEventProducer",
          "parameterTypes": [
            "io.camunda.zeebe.client.ZeebeClient",
            "org.springframework.context.ApplicationEventPublisher"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.CamundaAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.CamundaAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.CamundaAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.ExecutorServiceConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.properties.ZeebeClientConfigurationProperties",
            "io.camunda.zeebe.spring.client.properties.CamundaClientProperties"
          ]
        },
        {
          "name": "zeebeClientThreadPool",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.JsonMapperConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "commonJsonMapper",
          "parameterTypes": []
        },
        {
          "name": "jsonMapper",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.JsonMapperConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "com.fasterxml.jackson.databind.ObjectMapper"
          ]
        },
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.JsonMapperConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.JsonMapperConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.MetricsDefaultConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.ZeebeActuatorConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "forceMeterRegistryPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.config.BeanPostProcessor",
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        },
        {
          "name": "micrometerMetricsRecorder",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        },
        {
          "name": "zeebeClientHealthIndicator",
          "parameterTypes": [
            "io.camunda.zeebe.client.ZeebeClient"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.ZeebeClientAllAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.properties.ZeebeClientConfigurationProperties",
            "io.camunda.zeebe.spring.client.properties.CamundaClientProperties"
          ]
        },
        {
          "name": "backoffSupplier",
          "parameterTypes": []
        },
        {
          "name": "commandExceptionHandlingStrategy",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.jobhandling.ZeebeClientExecutorService"
          ]
        },
        {
          "name": "jobWorkerManager",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.jobhandling.CommandExceptionHandlingStrategy",
            "io.camunda.zeebe.spring.client.metrics.MetricsRecorder",
            "io.camunda.zeebe.spring.client.jobhandling.parameter.ParameterResolverStrategy",
            "io.camunda.zeebe.spring.client.jobhandling.result.ResultProcessorStrategy"
          ]
        },
        {
          "name": "parameterResolverStrategy",
          "parameterTypes": [
            "io.camunda.zeebe.client.api.JsonMapper"
          ]
        },
        {
          "name": "propertyBasedZeebeWorkerValueCustomizer",
          "parameterTypes": []
        },
        {
          "name": "resultProcessorStrategy",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.ZeebeClientConfigurationImpl",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "applyLegacy",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.ZeebeClientProdAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "zeebeClient",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.configuration.ZeebeClientConfigurationImpl"
          ]
        },
        {
          "name": "zeebeClientConfiguration",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.properties.ZeebeClientConfigurationProperties",
            "io.camunda.zeebe.spring.client.properties.CamundaClientProperties",
            "io.camunda.zeebe.client.api.JsonMapper",
            "java.util.List",
            "java.util.List",
            "io.camunda.zeebe.spring.client.jobhandling.ZeebeClientExecutorService"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.configuration.ZeebeClientProdAutoConfiguration$1",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.event.ZeebeClientEventListener",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "handleStart",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.event.ZeebeClientCreatedEvent"
          ]
        },
        {
          "name": "handleStop",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.event.ZeebeClientClosingEvent"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.event.ZeebeLifecycleEventProducer",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.jobhandling.CommandExceptionHandlingStrategy"
    },
    {
      "type": "io.camunda.zeebe.spring.client.jobhandling.DefaultCommandExceptionHandlingStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.jobhandling.JobWorkerManager",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.jobhandling.ZeebeClientExecutorService",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.jobhandling.parameter.DefaultParameterResolverStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.jobhandling.parameter.ParameterResolverStrategy"
    },
    {
      "type": "io.camunda.zeebe.spring.client.jobhandling.result.DefaultResultProcessorStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.jobhandling.result.ResultProcessorStrategy"
    },
    {
      "type": "io.camunda.zeebe.spring.client.metrics.MetricsRecorder"
    },
    {
      "type": "io.camunda.zeebe.spring.client.properties.CamundaClientProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getAuth",
          "parameterTypes": []
        },
        {
          "name": "getIdentity",
          "parameterTypes": []
        },
        {
          "name": "getTenantIds",
          "parameterTypes": []
        },
        {
          "name": "getZeebe",
          "parameterTypes": []
        },
        {
          "name": "setAuth",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.properties.common.AuthProperties"
          ]
        },
        {
          "name": "setClusterId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIdentity",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.properties.common.ApiProperties"
          ]
        },
        {
          "name": "setMode",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.properties.CamundaClientProperties$ClientMode"
          ]
        },
        {
          "name": "setRegion",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setTenantIds",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "setZeebe",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.properties.common.ZeebeClientProperties"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.properties.CamundaClientProperties$ClientModeEditor"
    },
    {
      "type": "io.camunda.zeebe.spring.client.properties.PropertiesPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.properties.PropertyBasedZeebeWorkerValueCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.spring.client.properties.ZeebeClientConfigurationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        },
        {
          "name": "applyOverrides",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.properties.common.ApiProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setAudience",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setBaseUrl",
          "parameterTypes": [
            "java.net.URL"
          ]
        },
        {
          "name": "setEnabled",
          "parameterTypes": [
            "java.lang.Boolean"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.properties.common.AuthProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setClientId",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setClientSecret",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "setIssuer",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.properties.common.ZeebeClientProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getDefaults",
          "parameterTypes": []
        },
        {
          "name": "setDefaults",
          "parameterTypes": [
            "io.camunda.zeebe.spring.client.annotation.value.ZeebeWorkerValue"
          ]
        },
        {
          "name": "setGrpcAddress",
          "parameterTypes": [
            "java.net.URI"
          ]
        },
        {
          "name": "setPreferRestOverGrpc",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.zeebe.spring.client.testsupport.SpringZeebeTestContext"
    },
    {
      "type": "io.camunda.zeebe.spring.common.json.JsonMapper"
    },
    {
      "type": "io.camunda.zeebe.spring.common.json.SdkObjectMapper",
      "allDeclaredFields": true
    },
    {
      "type": "io.camunda.zeebe.util.logging.StackdriverLayout"
    },
    {
      "type": "io.grpc.Status"
    },
    {
      "type": "io.grpc.census.InternalCensusStatsAccessor"
    },
    {
      "type": "io.grpc.census.InternalCensusTracingAccessor"
    },
    {
      "type": "io.grpc.internal.ClientCallImpl"
    },
    {
      "type": "io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed"
    },
    {
      "type": "io.grpc.internal.ContextRunnable"
    },
    {
      "type": "io.grpc.internal.DelayedClientCall$DelayedListener"
    },
    {
      "type": "io.grpc.internal.DelayedClientCall$DelayedListener$3"
    },
    {
      "type": "io.grpc.internal.DnsNameResolverProvider"
    },
    {
      "type": "io.grpc.internal.JndiResourceResolverFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.grpc.internal.PickFirstLoadBalancerProvider"
    },
    {
      "type": "io.grpc.internal.SerializingExecutor",
      "fields": [
        {
          "name": "runState"
        }
      ]
    },
    {
      "type": "io.grpc.netty.NettyClientHandler"
    },
    {
      "type": "io.grpc.netty.ProtocolNegotiators$ClientTlsHandler"
    },
    {
      "type": "io.grpc.netty.ProtocolNegotiators$GrpcNegotiationHandler"
    },
    {
      "type": "io.grpc.netty.ProtocolNegotiators$WaitUntilActiveHandler"
    },
    {
      "type": "io.grpc.netty.UdsNameResolverProvider"
    },
    {
      "type": "io.grpc.netty.WriteBufferingAndExceptionHandler"
    },
    {
      "type": "io.grpc.override.ContextStorageOverride"
    },
    {
      "type": "io.grpc.stub.ClientCalls$StreamObserverToCallListenerAdapter"
    },
    {
      "type": "io.grpc.util.OutlierDetectionLoadBalancerProvider"
    },
    {
      "type": "io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider"
    },
    {
      "type": "io.lettuce.core.metrics.MicrometerCommandLatencyRecorder"
    },
    {
      "type": "io.micrometer.appoptics.AppOpticsMeterRegistry"
    },
    {
      "type": "io.micrometer.atlas.AtlasMeterRegistry"
    },
    {
      "type": "io.micrometer.common.lang.NonNullApi"
    },
    {
      "type": "io.micrometer.common.lang.NonNullFields"
    },
    {
      "type": "io.micrometer.common.lang.Nullable"
    },
    {
      "type": "io.micrometer.context.ContextRegistry"
    },
    {
      "type": "io.micrometer.core.annotation.Timed"
    },
    {
      "type": "io.micrometer.core.instrument.Clock"
    },
    {
      "type": "io.micrometer.core.instrument.Clock$1",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "close",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.binder.MeterBinder"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.composite.CompositeMeterRegistry"
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilter"
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilter$9",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.distribution.TimeWindowMax",
      "fields": [
        {
          "name": "rotating"
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.distribution.TimeWindowSum",
      "fields": [
        {
          "name": "rotating"
        }
      ]
    },
    {
      "type": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.observation.MeterObservationHandler"
    },
    {
      "type": "io.micrometer.core.instrument.simple.SimpleConfig"
    },
    {
      "type": "io.micrometer.core.instrument.simple.SimpleMeterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.datadog.DatadogMeterRegistry"
    },
    {
      "type": "io.micrometer.dynatrace.DynatraceMeterRegistry"
    },
    {
      "type": "io.micrometer.elastic.ElasticMeterRegistry"
    },
    {
      "type": "io.micrometer.ganglia.GangliaMeterRegistry"
    },
    {
      "type": "io.micrometer.graphite.GraphiteMeterRegistry"
    },
    {
      "type": "io.micrometer.humio.HumioMeterRegistry"
    },
    {
      "type": "io.micrometer.influx.InfluxMeterRegistry"
    },
    {
      "type": "io.micrometer.jmx.JmxMeterRegistry"
    },
    {
      "type": "io.micrometer.kairos.KairosMeterRegistry"
    },
    {
      "type": "io.micrometer.newrelic.NewRelicMeterRegistry"
    },
    {
      "type": "io.micrometer.observation.Observation"
    },
    {
      "type": "io.micrometer.observation.ObservationConvention"
    },
    {
      "type": "io.micrometer.observation.ObservationFilter"
    },
    {
      "type": "io.micrometer.observation.ObservationHandler"
    },
    {
      "type": "io.micrometer.observation.ObservationPredicate"
    },
    {
      "type": "io.micrometer.observation.ObservationRegistry"
    },
    {
      "type": "io.micrometer.observation.SimpleObservationRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.prometheus.PrometheusMeterRegistry"
    },
    {
      "type": "io.micrometer.prometheusmetrics.PrometheusMeterRegistry"
    },
    {
      "type": "io.micrometer.registry.otlp.OtlpMeterRegistry"
    },
    {
      "type": "io.micrometer.signalfx.SignalFxMeterRegistry"
    },
    {
      "type": "io.micrometer.stackdriver.StackdriverMeterRegistry"
    },
    {
      "type": "io.micrometer.statsd.StatsdMeterRegistry"
    },
    {
      "type": "io.micrometer.tracing.Tracer"
    },
    {
      "type": "io.micrometer.tracing.otel.bridge.OtelTracer"
    },
    {
      "type": "io.netty.buffer.AbstractByteBufAllocator"
    },
    {
      "type": "io.netty.buffer.AbstractReferenceCountedByteBuf",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.buffer.ByteBuf"
    },
    {
      "type": "io.netty.buffer.PooledByteBufAllocator"
    },
    {
      "type": "io.netty.channel.AbstractChannelHandlerContext",
      "fields": [
        {
          "name": "handlerState"
        }
      ]
    },
    {
      "type": "io.netty.channel.ChannelOutboundBuffer",
      "fields": [
        {
          "name": "totalPendingSize"
        },
        {
          "name": "unwritable"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelConfig",
      "fields": [
        {
          "name": "autoRead"
        },
        {
          "name": "writeBufferWaterMark"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline",
      "fields": [
        {
          "name": "estimatorHandle"
        }
      ]
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$HeadContext"
    },
    {
      "type": "io.netty.channel.DefaultChannelPipeline$TailContext"
    },
    {
      "type": "io.netty.channel.DefaultFileRegion"
    },
    {
      "type": "io.netty.channel.epoll.AbstractEpollChannel"
    },
    {
      "type": "io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe"
    },
    {
      "type": "io.netty.channel.epoll.Epoll",
      "methods": [
        {
          "name": "isAvailable",
          "parameterTypes": []
        },
        {
          "name": "unavailabilityCause",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.netty.channel.epoll.EpollChannelOption",
      "fields": [
        {
          "name": "TCP_USER_TIMEOUT"
        }
      ]
    },
    {
      "type": "io.netty.channel.epoll.EpollDomainSocketChannel"
    },
    {
      "type": "io.netty.channel.epoll.EpollEventLoop"
    },
    {
      "type": "io.netty.channel.epoll.EpollEventLoopGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "java.util.concurrent.ThreadFactory"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.epoll.EpollServerSocketChannel"
    },
    {
      "type": "io.netty.channel.epoll.EpollSocketChannel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket"
    },
    {
      "type": "io.netty.channel.kqueue.KQueue"
    },
    {
      "type": "io.netty.channel.socket.nio.NioSocketChannel"
    },
    {
      "type": "io.netty.channel.unix.DatagramSocketAddress"
    },
    {
      "type": "io.netty.channel.unix.DomainDatagramSocketAddress"
    },
    {
      "type": "io.netty.channel.unix.Errors"
    },
    {
      "type": "io.netty.channel.unix.FileDescriptor",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.PeerCredentials"
    },
    {
      "type": "io.netty.channel.unix.Socket"
    },
    {
      "type": "io.netty.handler.codec.dns.DatagramDnsQueryEncoder"
    },
    {
      "type": "io.netty.handler.codec.haproxy.HAProxyMessageDecoder"
    },
    {
      "type": "io.netty.handler.codec.http.HttpClientCodec"
    },
    {
      "type": "io.netty.handler.codec.http.HttpServerCodec"
    },
    {
      "type": "io.netty.handler.ssl.SslHandler"
    },
    {
      "type": "io.netty.handler.timeout.ReadTimeoutHandler"
    },
    {
      "type": "io.netty.handler.timeout.WriteTimeoutHandler"
    },
    {
      "type": "io.netty.incubator.channel.uring.IOUring"
    },
    {
      "type": "io.netty.incubator.codec.http3.Http3"
    },
    {
      "type": "io.netty.internal.tcnative.CertificateCallback"
    },
    {
      "type": "io.netty.internal.tcnative.CertificateCallbackTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLContext"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodDecryptTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodSignTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLPrivateKeyMethodTask"
    },
    {
      "type": "io.netty.internal.tcnative.SSLTask"
    },
    {
      "type": "io.netty.resolver.dns.Cache$Entries",
      "fields": [
        {
          "name": "expirationFuture"
        }
      ]
    },
    {
      "type": "io.netty.resolver.dns.DnsNameResolver$2"
    },
    {
      "type": "io.netty.resolver.dns.DnsNameResolver$3"
    },
    {
      "type": "io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler"
    },
    {
      "type": "io.netty.util.AbstractReferenceCounted",
      "fields": [
        {
          "name": "refCnt"
        }
      ]
    },
    {
      "type": "io.netty.util.DefaultAttributeMap",
      "fields": [
        {
          "name": "attributes"
        }
      ]
    },
    {
      "type": "io.netty.util.DefaultAttributeMap$DefaultAttribute",
      "fields": [
        {
          "name": "attributeMap"
        }
      ]
    },
    {
      "type": "io.netty.util.NettyRuntime"
    },
    {
      "type": "io.netty.util.Recycler$DefaultHandle",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "io.netty.util.ReferenceCountUtil"
    },
    {
      "type": "io.netty.util.ResourceLeakDetector$DefaultResourceLeak",
      "fields": [
        {
          "name": "droppedRecords"
        },
        {
          "name": "head"
        }
      ]
    },
    {
      "type": "io.netty.util.concurrent.DefaultPromise",
      "fields": [
        {
          "name": "result"
        }
      ]
    },
    {
      "type": "io.netty.util.concurrent.FastThreadLocalRunnable"
    },
    {
      "type": "io.netty.util.concurrent.SingleThreadEventExecutor",
      "fields": [
        {
          "name": "state"
        },
        {
          "name": "threadProperties"
        }
      ]
    },
    {
      "type": "io.netty.util.concurrent.SingleThreadEventExecutor$4"
    },
    {
      "type": "io.netty.util.internal.NativeLibraryUtil",
      "methods": [
        {
          "name": "loadLibrary",
          "parameterTypes": [
            "java.lang.String",
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "io.netty.util.internal.ThreadExecutorMap$2"
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueConsumerIndexField",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueProducerIndexField",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "io.netty.util.internal.shaded.org.jctools.queues.unpadded.MpscUnpaddedArrayQueueProducerLimitField",
      "fields": [
        {
          "name": "producerLimit"
        }
      ]
    },
    {
      "type": "io.netty5.buffer.Buffer"
    },
    {
      "type": "io.opentelemetry.api.OpenTelemetry"
    },
    {
      "type": "io.opentelemetry.context.ContextStorage"
    },
    {
      "type": "io.opentelemetry.sdk.OpenTelemetrySdk"
    },
    {
      "type": "io.perfmark.impl.SecretPerfMarkImpl$PerfMarkImpl"
    },
    {
      "type": "io.r2dbc.pool.ConnectionPool"
    },
    {
      "type": "io.r2dbc.proxy.ProxyConnectionFactory"
    },
    {
      "type": "io.r2dbc.spi.ConnectionFactory"
    },
    {
      "type": "io.reactivex.rxjava3.core.Flowable"
    },
    {
      "type": "io.rsocket.RSocket"
    },
    {
      "type": "io.rsocket.core.RSocketServer"
    },
    {
      "type": "io.smallrye.mutiny.Multi"
    },
    {
      "type": "io.undertow.Undertow"
    },
    {
      "type": "io.undertow.websockets.WebSocketProtocolHandshakeHandler"
    },
    {
      "type": "io.vavr.CheckedFunction0"
    },
    {
      "type": "io.vavr.control.Try"
    },
    {
      "type": "jakarta.activation.MimeType"
    },
    {
      "type": "jakarta.annotation.ManagedBean"
    },
    {
      "type": "jakarta.annotation.PostConstruct"
    },
    {
      "type": "jakarta.annotation.PreDestroy"
    },
    {
      "type": "jakarta.annotation.Resource"
    },
    {
      "type": "jakarta.ejb.EJB"
    },
    {
      "type": "jakarta.inject.Inject"
    },
    {
      "type": "jakarta.inject.Named"
    },
    {
      "type": "jakarta.inject.Provider"
    },
    {
      "type": "jakarta.inject.Qualifier"
    },
    {
      "type": "jakarta.jms.ConnectionFactory"
    },
    {
      "type": "jakarta.jms.Message"
    },
    {
      "type": "jakarta.json.bind.Jsonb"
    },
    {
      "type": "jakarta.persistence.EntityManager"
    },
    {
      "type": "jakarta.persistence.EntityManagerFactory"
    },
    {
      "type": "jakarta.persistence.Persistence"
    },
    {
      "type": "jakarta.servlet.Filter"
    },
    {
      "type": "jakarta.servlet.MultipartConfigElement"
    },
    {
      "type": "jakarta.servlet.Servlet"
    },
    {
      "type": "jakarta.servlet.ServletRegistration"
    },
    {
      "type": "jakarta.servlet.ServletRequest"
    },
    {
      "type": "jakarta.transaction.Transaction"
    },
    {
      "type": "jakarta.transaction.TransactionManager"
    },
    {
      "type": "jakarta.validation.Constraint"
    },
    {
      "type": "jakarta.validation.Valid"
    },
    {
      "type": "jakarta.validation.Validator"
    },
    {
      "type": "jakarta.validation.ValidatorFactory"
    },
    {
      "type": "jakarta.validation.bootstrap.GenericBootstrap"
    },
    {
      "type": "jakarta.validation.constraints.NotBlank"
    },
    {
      "type": "jakarta.validation.executable.ExecutableValidator"
    },
    {
      "type": "jakarta.xml.bind.Binder"
    },
    {
      "type": "java.beans.Introspector"
    },
    {
      "type": "java.io.Closeable"
    },
    {
      "type": "java.io.Console",
      "methods": [
        {
          "name": "isTerminal",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.io.FileDescriptor"
    },
    {
      "type": "java.io.FilePermission"
    },
    {
      "type": "java.io.IOException"
    },
    {
      "type": "java.io.OutputStream"
    },
    {
      "type": "java.io.Reader"
    },
    {
      "type": "java.io.Serializable"
    },
    {
      "type": "java.io.UncheckedIOException"
    },
    {
      "type": "java.lang.AutoCloseable"
    },
    {
      "type": "java.lang.Boolean",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Byte",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.CharSequence"
    },
    {
      "type": "java.lang.Character",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Class",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getModule",
          "parameterTypes": []
        },
        {
          "name": "getRecordComponents",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "fields": [
        {
          "name": "classLoaderValueMap"
        }
      ]
    },
    {
      "type": "java.lang.CloneNotSupportedException"
    },
    {
      "type": "java.lang.Cloneable"
    },
    {
      "type": "java.lang.Comparable"
    },
    {
      "type": "java.lang.Deprecated"
    },
    {
      "type": "java.lang.Double",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Error"
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.Float",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.IllegalStateException"
    },
    {
      "type": "java.lang.Integer",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Iterable"
    },
    {
      "type": "java.lang.Long",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "isNamed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.NullPointerException"
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "type": "java.lang.ProcessBuilder"
    },
    {
      "type": "java.lang.ProcessHandle",
      "methods": [
        {
          "name": "current",
          "parameterTypes": []
        },
        {
          "name": "pid",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ProcessImpl"
    },
    {
      "type": "java.lang.Record",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Runnable"
    },
    {
      "type": "java.lang.Runtime"
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.RuntimePermission"
    },
    {
      "type": "java.lang.Short",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.StackTraceElement"
    },
    {
      "type": "java.lang.String",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.StringBuilder"
    },
    {
      "type": "java.lang.System"
    },
    {
      "type": "java.lang.Thread",
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ]
    },
    {
      "type": "java.lang.ThreadDeath"
    },
    {
      "type": "java.lang.ThreadLocal"
    },
    {
      "type": "java.lang.Throwable"
    },
    {
      "type": "java.lang.Void",
      "fields": [
        {
          "name": "TYPE"
        }
      ]
    },
    {
      "type": "java.lang.annotation.Documented"
    },
    {
      "type": "java.lang.annotation.Inherited"
    },
    {
      "type": "java.lang.annotation.Repeatable"
    },
    {
      "type": "java.lang.annotation.Retention"
    },
    {
      "type": "java.lang.annotation.Target"
    },
    {
      "type": "java.lang.constant.Constable"
    },
    {
      "type": "java.lang.invoke.LambdaMetafactory"
    },
    {
      "type": "java.lang.invoke.MethodHandles$Lookup"
    },
    {
      "type": "java.lang.invoke.SerializedLambda"
    },
    {
      "type": "java.lang.invoke.StringConcatFactory"
    },
    {
      "type": "java.lang.invoke.TypeDescriptor"
    },
    {
      "type": "java.lang.invoke.TypeDescriptor$OfField"
    },
    {
      "type": "java.lang.management.BufferPoolMXBean"
    },
    {
      "type": "java.lang.management.ClassLoadingMXBean"
    },
    {
      "type": "java.lang.management.CompilationMXBean"
    },
    {
      "type": "java.lang.management.LockInfo"
    },
    {
      "type": "java.lang.management.ManagementPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.management.MemoryMXBean",
      "methods": [
        {
          "name": "getHeapMemoryUsage",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.management.MemoryManagerMXBean"
    },
    {
      "type": "java.lang.management.MemoryPoolMXBean"
    },
    {
      "type": "java.lang.management.MemoryUsage",
      "methods": [
        {
          "name": "from",
          "parameterTypes": [
            "javax.management.openmbean.CompositeData"
          ]
        },
        {
          "name": "getCommitted",
          "parameterTypes": []
        },
        {
          "name": "getInit",
          "parameterTypes": []
        },
        {
          "name": "getMax",
          "parameterTypes": []
        },
        {
          "name": "getUsed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.management.MonitorInfo"
    },
    {
      "type": "java.lang.management.PlatformLoggingMXBean"
    },
    {
      "type": "java.lang.management.RuntimeMXBean"
    },
    {
      "type": "java.lang.management.ThreadInfo"
    },
    {
      "type": "java.lang.reflect.AnnotatedElement"
    },
    {
      "type": "java.lang.reflect.GenericDeclaration"
    },
    {
      "type": "java.lang.reflect.InvocationTargetException"
    },
    {
      "type": "java.lang.reflect.Method"
    },
    {
      "type": "java.lang.reflect.ParameterizedType",
      "methods": [
        {
          "name": "getActualTypeArguments",
          "parameterTypes": []
        },
        {
          "name": "getRawType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Proxy",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.reflect.RecordComponent",
      "methods": [
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Type"
    },
    {
      "type": "java.lang.reflect.UndeclaredThrowableException"
    },
    {
      "type": "java.lang.reflect.WildcardType",
      "methods": [
        {
          "name": "getLowerBounds",
          "parameterTypes": []
        },
        {
          "name": "getUpperBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.math.BigDecimal"
    },
    {
      "type": "java.math.BigInteger"
    },
    {
      "type": "java.net.InetSocketAddress"
    },
    {
      "type": "java.net.NetPermission"
    },
    {
      "type": "java.net.PortUnreachableException"
    },
    {
      "type": "java.net.SocketOption"
    },
    {
      "type": "java.net.SocketPermission"
    },
    {
      "type": "java.net.StandardSocketOptions",
      "fields": [
        {
          "name": "IP_MULTICAST_IF"
        },
        {
          "name": "IP_MULTICAST_LOOP"
        },
        {
          "name": "IP_MULTICAST_TTL"
        }
      ]
    },
    {
      "type": "java.net.URI"
    },
    {
      "type": "java.net.URLClassLoader"
    },
    {
      "type": "java.net.URLClassLoader$1"
    },
    {
      "type": "java.net.URLPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.net.http.HttpClient"
    },
    {
      "type": "java.nio.Bits",
      "fields": [
        {
          "name": "MAX_MEMORY"
        },
        {
          "name": "UNALIGNED"
        }
      ]
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "address"
        }
      ]
    },
    {
      "type": "java.nio.ByteBuffer"
    },
    {
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "type": "java.nio.channels.ClosedChannelException"
    },
    {
      "type": "java.nio.channels.FileChannel"
    },
    {
      "type": "java.nio.channels.NetworkChannel"
    },
    {
      "type": "java.nio.channels.spi.SelectorProvider"
    },
    {
      "type": "java.nio.file.CopyOption"
    },
    {
      "type": "java.nio.file.FileSystem"
    },
    {
      "type": "java.nio.file.FileSystems"
    },
    {
      "type": "java.nio.file.FileVisitOption"
    },
    {
      "type": "java.nio.file.Files"
    },
    {
      "type": "java.nio.file.LinkOption"
    },
    {
      "type": "java.nio.file.OpenOption"
    },
    {
      "type": "java.nio.file.Path"
    },
    {
      "type": "java.nio.file.attribute.FileAttribute"
    },
    {
      "type": "java.rmi.MarshalledObject"
    },
    {
      "type": "java.rmi.dgc.Lease"
    },
    {
      "type": "java.rmi.dgc.VMID"
    },
    {
      "type": "java.rmi.server.ObjID"
    },
    {
      "type": "java.rmi.server.UID"
    },
    {
      "type": "java.security.AccessController"
    },
    {
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "type": "java.security.AllPermission"
    },
    {
      "type": "java.security.KeyStoreSpi"
    },
    {
      "type": "java.security.SecureClassLoader"
    },
    {
      "type": "java.security.SecurityPermission"
    },
    {
      "type": "java.security.interfaces.ECPrivateKey"
    },
    {
      "type": "java.security.interfaces.ECPublicKey"
    },
    {
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "type": "java.sql.Date"
    },
    {
      "type": "java.sql.Timestamp"
    },
    {
      "type": "java.time.DurationEditor"
    },
    {
      "type": "java.time.Instant"
    },
    {
      "type": "java.util.AbstractCollection",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.AbstractList",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.AbstractMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Arrays$ArrayList",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collection"
    },
    {
      "type": "java.util.Collections$SingletonMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$UnmodifiableCollection",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$UnmodifiableList",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$UnmodifiableMap",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$UnmodifiableRandomAccessList",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Collections$UnmodifiableSet",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Date",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.HashMap"
    },
    {
      "type": "java.util.HashSet"
    },
    {
      "type": "java.util.ImmutableCollections$AbstractImmutableCollection",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ImmutableCollections$AbstractImmutableList",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.ImmutableCollections$ListN",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.LinkedHashMap"
    },
    {
      "type": "java.util.LinkedList"
    },
    {
      "type": "java.util.List"
    },
    {
      "type": "java.util.Map"
    },
    {
      "type": "java.util.Map$Entry"
    },
    {
      "type": "java.util.Objects"
    },
    {
      "type": "java.util.Optional"
    },
    {
      "type": "java.util.PropertyPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.util.RandomAccess"
    },
    {
      "type": "java.util.Set"
    },
    {
      "type": "java.util.concurrent.AbstractExecutorService"
    },
    {
      "type": "java.util.concurrent.CompletableFuture"
    },
    {
      "type": "java.util.concurrent.CompletableFuture$AsyncSupply"
    },
    {
      "type": "java.util.concurrent.CompletionStage"
    },
    {
      "type": "java.util.concurrent.ConcurrentHashMap"
    },
    {
      "type": "java.util.concurrent.Executor"
    },
    {
      "type": "java.util.concurrent.ExecutorService"
    },
    {
      "type": "java.util.concurrent.Executors"
    },
    {
      "type": "java.util.concurrent.ForkJoinTask",
      "fields": [
        {
          "name": "aux"
        },
        {
          "name": "status"
        }
      ]
    },
    {
      "type": "java.util.concurrent.ThreadPoolExecutor"
    },
    {
      "type": "java.util.concurrent.ThreadPoolExecutor$Worker"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.LongAdder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "add",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.Striped64$Cell",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.function.BiFunction"
    },
    {
      "type": "java.util.function.Function"
    },
    {
      "type": "java.util.function.Predicate"
    },
    {
      "type": "java.util.function.Supplier"
    },
    {
      "type": "java.util.function.ToIntFunction"
    },
    {
      "type": "java.util.function.UnaryOperator"
    },
    {
      "type": "java.util.logging.LogManager",
      "methods": [
        {
          "name": "getLoggingMXBean",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.logging.LoggingMXBean"
    },
    {
      "type": "java.util.regex.Pattern"
    },
    {
      "type": "java.util.stream.Collectors"
    },
    {
      "type": "java.util.stream.IntStream"
    },
    {
      "type": "java.util.stream.Stream"
    },
    {
      "type": "javafx.beans.value.ObservableValue"
    },
    {
      "type": "javax.annotation.CheckForNull"
    },
    {
      "type": "javax.annotation.ManagedBean"
    },
    {
      "type": "javax.annotation.Nonnull"
    },
    {
      "type": "javax.annotation.PostConstruct"
    },
    {
      "type": "javax.annotation.PreDestroy"
    },
    {
      "type": "javax.annotation.Resource"
    },
    {
      "type": "javax.annotation.meta.TypeQualifier"
    },
    {
      "type": "javax.annotation.meta.TypeQualifierDefault"
    },
    {
      "type": "javax.cache.CacheManager"
    },
    {
      "type": "javax.cache.Caching"
    },
    {
      "type": "javax.inject.Inject"
    },
    {
      "type": "javax.inject.Named"
    },
    {
      "type": "javax.inject.Qualifier"
    },
    {
      "type": "javax.management.MBeanInfo"
    },
    {
      "type": "javax.management.MBeanOperationInfo"
    },
    {
      "type": "javax.management.MBeanServer"
    },
    {
      "type": "javax.management.MBeanServerBuilder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "javax.management.MBeanServerConnection"
    },
    {
      "type": "javax.management.NotificationEmitter"
    },
    {
      "type": "javax.management.ObjectName"
    },
    {
      "type": "javax.management.StandardEmitterMBean"
    },
    {
      "type": "javax.management.modelmbean.ModelMBeanInfoSupport"
    },
    {
      "type": "javax.management.modelmbean.ModelMBeanOperationInfo"
    },
    {
      "type": "javax.management.openmbean.CompositeData"
    },
    {
      "type": "javax.management.openmbean.OpenMBeanOperationInfoSupport"
    },
    {
      "type": "javax.management.openmbean.TabularData"
    },
    {
      "type": "javax.management.remote.rmi.RMIConnection",
      "methods": [
        {
          "name": "close",
          "parameterTypes": []
        },
        {
          "name": "getAttribute",
          "parameterTypes": [
            "javax.management.ObjectName",
            "java.lang.String",
            "javax.security.auth.Subject"
          ]
        },
        {
          "name": "getConnectionId",
          "parameterTypes": []
        },
        {
          "name": "invoke",
          "parameterTypes": [
            "javax.management.ObjectName",
            "java.lang.String",
            "java.rmi.MarshalledObject",
            "java.lang.String[]",
            "javax.security.auth.Subject"
          ]
        },
        {
          "name": "isInstanceOf",
          "parameterTypes": [
            "javax.management.ObjectName",
            "java.lang.String",
            "javax.security.auth.Subject"
          ]
        },
        {
          "name": "queryMBeans",
          "parameterTypes": [
            "javax.management.ObjectName",
            "java.rmi.MarshalledObject",
            "javax.security.auth.Subject"
          ]
        }
      ]
    },
    {
      "type": "javax.management.remote.rmi.RMIConnectionImpl_Skel"
    },
    {
      "type": "javax.management.remote.rmi.RMIConnectionImpl_Stub",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.rmi.server.RemoteRef"
          ]
        }
      ]
    },
    {
      "type": "javax.management.remote.rmi.RMIServer",
      "methods": [
        {
          "name": "newClient",
          "parameterTypes": [
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "javax.management.remote.rmi.RMIServerImpl_Skel"
    },
    {
      "type": "javax.management.remote.rmi.RMIServerImpl_Stub",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.rmi.server.RemoteRef"
          ]
        }
      ]
    },
    {
      "type": "javax.money.MonetaryAmount"
    },
    {
      "type": "javax.naming.InitialContext"
    },
    {
      "type": "javax.naming.directory.InitialDirContext"
    },
    {
      "type": "javax.naming.ldap.LdapContext"
    },
    {
      "type": "javax.net.ssl.SSLEngine",
      "methods": [
        {
          "name": "getApplicationProtocol",
          "parameterTypes": []
        },
        {
          "name": "getHandshakeApplicationProtocol",
          "parameterTypes": []
        },
        {
          "name": "getHandshakeApplicationProtocolSelector",
          "parameterTypes": []
        },
        {
          "name": "setHandshakeApplicationProtocolSelector",
          "parameterTypes": [
            "java.util.function.BiFunction"
          ]
        }
      ]
    },
    {
      "type": "javax.net.ssl.SSLParameters",
      "methods": [
        {
          "name": "setApplicationProtocols",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "javax.servlet.Servlet"
    },
    {
      "type": "javax.smartcardio.CardPermission"
    },
    {
      "type": "javax.sql.DataSource"
    },
    {
      "type": "jdk.crac.management.CRaCMXBean"
    },
    {
      "type": "jdk.internal.jrtfs.JrtFileSystemProvider"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$AppClassLoader"
    },
    {
      "type": "jdk.internal.loader.ClassLoaders$PlatformClassLoader"
    },
    {
      "type": "jdk.internal.misc.Unsafe",
      "methods": [
        {
          "name": "getUnsafe",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "jdk.internal.reflect.DirectMethodHandleAccessor"
    },
    {
      "type": "jdk.management.jfr.ConfigurationInfo"
    },
    {
      "type": "jdk.management.jfr.EventTypeInfo"
    },
    {
      "type": "jdk.management.jfr.FlightRecorderMXBean"
    },
    {
      "type": "jdk.management.jfr.FlightRecorderMXBeanImpl"
    },
    {
      "type": "jdk.management.jfr.RecordingInfo"
    },
    {
      "type": "jdk.management.jfr.SettingDescriptorInfo"
    },
    {
      "type": "kotlin.Metadata"
    },
    {
      "type": "kotlinx.coroutines.reactor.MonoKt"
    },
    {
      "type": "kotlinx.serialization.cbor.Cbor"
    },
    {
      "type": "kotlinx.serialization.json.Json"
    },
    {
      "type": "kotlinx.serialization.protobuf.ProtoBuf"
    },
    {
      "type": "libcore.io.Memory"
    },
    {
      "type": "liquibase.change.DatabaseChange"
    },
    {
      "type": "liquibase.integration.spring.SpringLiquibase"
    },
    {
      "type": "net.poundex.jsonlog.DefaultObjectMapperFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.poundex.jsonlog.JsonLogbackLoggingSystem"
    },
    {
      "type": "net.poundex.jsonlog.JsonLogbackLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.poundex.jsonlog.JsonLogbackLoggingSystem.Factory"
    },
    {
      "type": "net.poundex.jsonlog.LoggingEvent",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "context",
          "parameterTypes": []
        },
        {
          "name": "level",
          "parameterTypes": []
        },
        {
          "name": "logger",
          "parameterTypes": []
        },
        {
          "name": "message",
          "parameterTypes": []
        },
        {
          "name": "tags",
          "parameterTypes": []
        },
        {
          "name": "thread",
          "parameterTypes": []
        },
        {
          "name": "thrown",
          "parameterTypes": []
        },
        {
          "name": "timestamp",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.poundex.jsonlog.LoggingEvent$Thrown",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "message",
          "parameterTypes": []
        },
        {
          "name": "stacktrace",
          "parameterTypes": []
        },
        {
          "name": "type",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "net.poundex.xmachinery.fio.io.DefaultIo",
      "allDeclaredFields": true
    },
    {
      "type": "net.poundex.xmachinery.fio.io.IO"
    },
    {
      "type": "net.poundex.xmachinery.fio.io.IoCheckedFunction"
    },
    {
      "type": "net.poundex.xmachinery.fio.sys.DefaultSys",
      "allDeclaredFields": true
    },
    {
      "type": "net.poundex.xmachinery.fio.sys.Sys"
    },
    {
      "type": "net.poundex.xmachinery.fio.xdg.DefaultXdg",
      "allDeclaredFields": true
    },
    {
      "type": "net.poundex.xmachinery.fio.xdg.Xdg"
    },
    {
      "type": "org.apache.catalina.Manager"
    },
    {
      "type": "org.apache.catalina.startup.Tomcat"
    },
    {
      "type": "org.apache.commons.exec.CommandLine"
    },
    {
      "type": "org.apache.commons.exec.DefaultExecutor"
    },
    {
      "type": "org.apache.commons.exec.DefaultExecutor$Builder"
    },
    {
      "type": "org.apache.commons.exec.ExecuteStreamHandler"
    },
    {
      "type": "org.apache.commons.exec.ExecuteWatchdog"
    },
    {
      "type": "org.apache.commons.exec.LogOutputStream"
    },
    {
      "type": "org.apache.commons.exec.PumpStreamHandler"
    },
    {
      "type": "org.apache.commons.exec.launcher.Java13CommandLauncher"
    },
    {
      "type": "org.apache.coyote.UpgradeProtocol"
    },
    {
      "type": "org.apache.el.ExpressionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.hc.client5.http.impl.async.CloseableHttpAsyncClient"
    },
    {
      "type": "org.apache.hc.client5.http.impl.async.HttpAsyncClients"
    },
    {
      "type": "org.apache.hc.core5.http.nio.AsyncRequestProducer"
    },
    {
      "type": "org.apache.hc.core5.reactive.ReactiveDataConsumer"
    },
    {
      "type": "org.apache.hc.core5.reactive.ReactiveResponseConsumer"
    },
    {
      "type": "org.apache.jasper.compiler.JspConfig"
    },
    {
      "type": "org.apache.logging.log4j.LogManager"
    },
    {
      "type": "org.apache.logging.log4j.core.LoggerContext"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.AppenderSet"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.AsyncAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.ConsoleAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.CountingNoOpAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.FailoverAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.FailoversPlugin"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.FileAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.HttpAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.MemoryMappedFileAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.NullAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.OutputStreamAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.RandomAccessFileAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.RollingFileAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.RollingRandomAccessFileAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.ScriptAppenderSelector"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.SmtpAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.SocketAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.SyslogAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.WriterAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.db.ColumnMapping"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.db.jdbc.DataSourceConnectionSource"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.db.jdbc.DriverManagerConnectionSource"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.db.jdbc.FactoryMethodConnectionSource"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.mom.JmsAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.mom.jeromq.JeroMqAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.mom.kafka.KafkaAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.nosql.NoSqlAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rewrite.LoggerNameLevelRewritePolicy"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rewrite.MapRewritePolicy"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rewrite.PropertiesRewritePolicy"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rewrite.RewriteAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.CompositeTriggeringPolicy"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.CronTriggeringPolicy"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.DefaultRolloverStrategy"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.NoOpTriggeringPolicy"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.OnStartupTriggeringPolicy"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.SizeBasedTriggeringPolicy"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.action.DeleteAction"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileCount"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileSize"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfAll"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfAny"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfFileName"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfLastModified"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.action.IfNot"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.action.PathSortByModificationTime"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.rolling.action.ScriptCondition"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.routing.IdlePurgePolicy"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.routing.Route"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.routing.Routes"
    },
    {
      "type": "org.apache.logging.log4j.core.appender.routing.RoutingAppender"
    },
    {
      "type": "org.apache.logging.log4j.core.async.ArrayBlockingQueueFactory"
    },
    {
      "type": "org.apache.logging.log4j.core.async.AsyncLoggerConfig"
    },
    {
      "type": "org.apache.logging.log4j.core.async.AsyncLoggerConfig$RootLogger"
    },
    {
      "type": "org.apache.logging.log4j.core.async.AsyncWaitStrategyFactoryConfig"
    },
    {
      "type": "org.apache.logging.log4j.core.async.DisruptorBlockingQueueFactory"
    },
    {
      "type": "org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory"
    },
    {
      "type": "org.apache.logging.log4j.core.async.LinkedTransferQueueFactory"
    },
    {
      "type": "org.apache.logging.log4j.core.config.AppenderControlArraySet",
      "fields": [
        {
          "name": "appenderArray"
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.config.AppenderRef"
    },
    {
      "type": "org.apache.logging.log4j.core.config.AppendersPlugin"
    },
    {
      "type": "org.apache.logging.log4j.core.config.CustomLevelConfig"
    },
    {
      "type": "org.apache.logging.log4j.core.config.CustomLevels"
    },
    {
      "type": "org.apache.logging.log4j.core.config.DefaultAdvertiser"
    },
    {
      "type": "org.apache.logging.log4j.core.config.HttpWatcher"
    },
    {
      "type": "org.apache.logging.log4j.core.config.LoggerConfig"
    },
    {
      "type": "org.apache.logging.log4j.core.config.LoggerConfig$RootLogger"
    },
    {
      "type": "org.apache.logging.log4j.core.config.LoggersPlugin"
    },
    {
      "type": "org.apache.logging.log4j.core.config.PropertiesPlugin"
    },
    {
      "type": "org.apache.logging.log4j.core.config.Property"
    },
    {
      "type": "org.apache.logging.log4j.core.config.ScriptsPlugin"
    },
    {
      "type": "org.apache.logging.log4j.core.config.arbiters.ClassArbiter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.arbiters.DefaultArbiter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.arbiters.EnvironmentArbiter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.arbiters.ScriptArbiter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.arbiters.SelectArbiter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.arbiters.SystemPropertyArbiter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.json.JsonConfigurationFactory"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigDecimalConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BigIntegerConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$BooleanConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteArrayConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ByteConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharArrayConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharacterConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CharsetConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ClassConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$CronExpressionConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DoubleConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$DurationConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FileConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$FloatConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$InetAddressConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$IntegerConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LevelConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$LongConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PathConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$PatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$SecurityProviderConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$ShortConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$StringConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UriConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UrlConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.plugins.convert.TypeConverters$UuidConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.config.properties.PropertiesConfigurationFactory"
    },
    {
      "type": "org.apache.logging.log4j.core.config.xml.XmlConfigurationFactory"
    },
    {
      "type": "org.apache.logging.log4j.core.config.yaml.YamlConfigurationFactory"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.BurstFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.CompositeFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.DenyAllFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.DynamicThresholdFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.LevelMatchFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.LevelRangeFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.MapFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.MarkerFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.MutableThreadContextMapFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.NoMarkerFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.RegexFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.ScriptFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.StringMatchFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.StructuredDataFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.ThreadContextMapFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.ThresholdFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.filter.TimeFilter"
    },
    {
      "type": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
    },
    {
      "type": "org.apache.logging.log4j.core.impl.Log4jProvider"
    },
    {
      "type": "org.apache.logging.log4j.core.impl.ThreadContextDataProvider"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.CsvLogEventLayout"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.CsvParameterLayout"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.GelfLayout"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.HtmlLayout"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.JsonLayout"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.LevelPatternSelector"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.LoggerFields"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.MarkerPatternSelector"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.MessageLayout"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.PatternLayout"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.PatternMatch"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.Rfc5424Layout"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.ScriptPatternSelector"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.SerializedLayout"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.SyslogLayout"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.XmlLayout"
    },
    {
      "type": "org.apache.logging.log4j.core.layout.YamlLayout"
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.ContextMapLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.DateLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.EnvironmentLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.EventLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.JavaLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.JmxRuntimeInputArgumentsLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.JndiLookup"
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.Log4jLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.LowerLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.MainMapLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.MapLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.MarkerLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.ResourceBundleLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.StructuredDataLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.SystemPropertiesLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.lookup.UpperLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.logging.log4j.core.net.MulticastDnsAdvertiser"
    },
    {
      "type": "org.apache.logging.log4j.core.net.SocketAddress"
    },
    {
      "type": "org.apache.logging.log4j.core.net.SocketOptions"
    },
    {
      "type": "org.apache.logging.log4j.core.net.SocketPerformancePreferences"
    },
    {
      "type": "org.apache.logging.log4j.core.net.ssl.KeyStoreConfiguration"
    },
    {
      "type": "org.apache.logging.log4j.core.net.ssl.SslConfiguration"
    },
    {
      "type": "org.apache.logging.log4j.core.net.ssl.TrustStoreConfiguration"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Black"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Blue"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Cyan"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Green"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Magenta"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Red"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$White"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.AbstractStyleNameConverter$Yellow"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.ClassNamePatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.DatePatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.EncodingPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.EndOfBatchPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.EqualsIgnoreCaseReplacementConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.EqualsReplacementConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.ExtendedThrowablePatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.FileDatePatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.FileLocationPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.FullLocationPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.HighlightConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.IntegerPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.LevelPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.LineLocationPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.LineSeparatorPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.LoggerFqcnPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.LoggerPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.MapPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.MarkerPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.MarkerSimpleNamePatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.MaxLengthConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.MdcPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.MessagePatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.MethodLocationPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.NanoTimePatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.NdcPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.ProcessIdPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.RegexReplacement"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.RegexReplacementConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.RelativeTimePatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.RepeatPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.RootThrowablePatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.SequenceNumberPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.StyleConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.ThreadIdPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.ThreadNamePatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.ThreadPriorityPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.ThrowablePatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.UuidPatternConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.pattern.VariablesNotEmptyReplacementConverter"
    },
    {
      "type": "org.apache.logging.log4j.core.script.Script"
    },
    {
      "type": "org.apache.logging.log4j.core.script.ScriptFile"
    },
    {
      "type": "org.apache.logging.log4j.core.script.ScriptRef"
    },
    {
      "type": "org.apache.logging.log4j.core.util.KeyValuePair"
    },
    {
      "type": "org.apache.logging.log4j.spi.ExtendedLogger"
    },
    {
      "type": "org.apache.logging.log4j.util.EnvironmentPropertySource"
    },
    {
      "type": "org.apache.logging.log4j.util.SystemPropertiesPropertySource"
    },
    {
      "type": "org.apache.logging.slf4j.SLF4JProvider"
    },
    {
      "type": "org.apache.pulsar.client.api.PulsarClient"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
    },
    {
      "type": "org.aspectj.weaver.Advice"
    },
    {
      "type": "org.bouncycastle.jsse.provider.BouncyCastleJsseProvider"
    },
    {
      "type": "org.cache2k.Cache2kBuilder"
    },
    {
      "type": "org.cache2k.extra.micrometer.Cache2kCacheMetrics"
    },
    {
      "type": "org.cache2k.extra.spring.SpringCache2kCache"
    },
    {
      "type": "org.crac.Core"
    },
    {
      "type": "org.eclipse.core.runtime.FileLocator"
    },
    {
      "type": "org.eclipse.jetty.alpn.ALPN"
    },
    {
      "type": "org.eclipse.jetty.client.HttpClient"
    },
    {
      "type": "org.eclipse.jetty.ee10.servlet.ServletHolder"
    },
    {
      "type": "org.eclipse.jetty.ee10.webapp.WebAppContext"
    },
    {
      "type": "org.eclipse.jetty.ee10.websocket.server.JettyWebSocketServerContainer"
    },
    {
      "type": "org.eclipse.jetty.npn.NextProtoNego"
    },
    {
      "type": "org.eclipse.jetty.server.Server"
    },
    {
      "type": "org.eclipse.jetty.util.Loader"
    },
    {
      "type": "org.eclipse.jetty.websocket.server.ServerWebSocketContainer"
    },
    {
      "type": "org.elasticsearch.client.RestClient"
    },
    {
      "type": "org.elasticsearch.client.RestClientBuilder"
    },
    {
      "type": "org.flywaydb.core.Flyway"
    },
    {
      "type": "org.glassfish.jersey.micrometer.server.ObservationApplicationEventListener"
    },
    {
      "type": "org.glassfish.jersey.server.ResourceConfig"
    },
    {
      "type": "org.glassfish.jersey.servlet.ServletContainer"
    },
    {
      "type": "org.h2.server.web.JakartaWebServlet"
    },
    {
      "type": "org.hibernate.validator.HibernateValidator"
    },
    {
      "type": "org.hibernate.validator.internal.engine.AbstractConfigurationImpl",
      "methods": [
        {
          "name": "externalClassLoader",
          "parameterTypes": [
            "java.lang.ClassLoader"
          ]
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.engine.ConfigurationImpl"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jboss.logging.Logger"
          ]
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_en"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_en_GB"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_en_GB"
    },
    {
      "type": "org.hotswap.agent.HotswapAgent"
    },
    {
      "type": "org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
    },
    {
      "type": "org.jboss.logging.Logger"
    },
    {
      "type": "org.joda.time.ReadableInstant"
    },
    {
      "type": "org.jooq.DSLContext"
    },
    {
      "type": "org.neo4j.driver.Driver"
    },
    {
      "type": "org.osgi.framework.FrameworkUtil"
    },
    {
      "type": "org.quartz.Scheduler"
    },
    {
      "type": "org.reactivestreams.Publisher"
    },
    {
      "type": "org.reactivestreams.Subscription"
    },
    {
      "type": "org.robolectric.Robolectric"
    },
    {
      "type": "org.slf4j.Logger"
    },
    {
      "type": "org.slf4j.LoggerFactory"
    },
    {
      "type": "org.slf4j.bridge.SLF4JBridgeHandler"
    },
    {
      "type": "org.slf4j.helpers.Log4jLoggerFactory"
    },
    {
      "type": "org.slf4j.spi.LocationAwareLogger"
    },
    {
      "type": "org.slf4j.spi.LoggingEventBuilder"
    },
    {
      "type": "org.springframework.amqp.rabbit.core.RabbitTemplate"
    },
    {
      "type": "org.springframework.aop.SpringProxy"
    },
    {
      "type": "org.springframework.aop.TargetClassAware"
    },
    {
      "type": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.Advised"
    },
    {
      "type": "org.springframework.aop.framework.AopConfigException"
    },
    {
      "type": "org.springframework.aop.framework.AopInfrastructureBean"
    },
    {
      "type": "org.springframework.aop.framework.ProxyConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setProxyTargetClass",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.ProxyProcessorSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setOrder",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aot.generate.Generated"
    },
    {
      "type": "org.springframework.aot.hint.annotation.Reflective"
    },
    {
      "type": "org.springframework.aot.hint.annotation.RegisterReflection"
    },
    {
      "type": "org.springframework.aot.hint.annotation.RegisterReflectionForBinding"
    },
    {
      "type": "org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor"
    },
    {
      "type": "org.springframework.batch.core.launch.JobLauncher"
    },
    {
      "type": "org.springframework.beans.BeansException"
    },
    {
      "type": "org.springframework.beans.CachedIntrospectionResults",
      "fields": [
        {
          "name": "acceptedClassLoaders"
        },
        {
          "name": "softClassCache"
        },
        {
          "name": "strongClassCache"
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.Aware"
    },
    {
      "type": "org.springframework.beans.factory.BeanClassLoaderAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactoryAware"
    },
    {
      "type": "org.springframework.beans.factory.BeanNameAware"
    },
    {
      "type": "org.springframework.beans.factory.DisposableBean"
    },
    {
      "type": "org.springframework.beans.factory.FactoryBean"
    },
    {
      "type": "org.springframework.beans.factory.InitializingBean"
    },
    {
      "type": "org.springframework.beans.factory.SmartInitializingSingleton"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Autowired"
    },
    {
      "type": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata"
    },
    {
      "type": "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Qualifier"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanFactoryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.support.AbstractBeanDefinition"
    },
    {
      "type": "org.springframework.beans.factory.support.AbstractBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor"
    },
    {
      "type": "org.springframework.beans.factory.support.DefaultListableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.support.DefaultSingletonBeanRegistry"
    },
    {
      "type": "org.springframework.beans.factory.support.NullBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ApplicationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setBannerMode",
          "parameterTypes": [
            "org.springframework.boot.Banner$Mode"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.Banner$ModeEditor"
    },
    {
      "type": "org.springframework.boot.ClearCachesApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.LazyInitializationExcludeFilter"
    },
    {
      "type": "org.springframework.boot.SpringApplication"
    },
    {
      "type": "org.springframework.boot.SpringBootConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.audit.AuditEventRepository"
    },
    {
      "type": "org.springframework.boot.actuate.audit.AuditEventsEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "beansEndpoint",
          "parameterTypes": [
            "org.springframework.context.ConfigurableApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "cachesEndpoint",
          "parameterTypes": [
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.cloudfoundry.CloudFoundryEndpointExposureOutcomeContributor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "conditions",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$ConditionsDescriptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getContexts",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$ContextConditionsDescriptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getExclusions",
          "parameterTypes": []
        },
        {
          "name": "getNegativeMatches",
          "parameterTypes": []
        },
        {
          "name": "getParentId",
          "parameterTypes": []
        },
        {
          "name": "getPositiveMatches",
          "parameterTypes": []
        },
        {
          "name": "getUnconditionalClasses",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$MessageAndConditionDescriptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCondition",
          "parameterTypes": []
        },
        {
          "name": "getMessage",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$MessageAndConditionsDescriptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getMatched",
          "parameterTypes": []
        },
        {
          "name": "getNotMatched",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "conditionsReportEndpoint",
          "parameterTypes": [
            "org.springframework.context.ConfigurableApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "configurationPropertiesReportEndpoint",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "endpointCachingOperationInvokerAdvisor",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        },
        {
          "name": "endpointOperationParameterMapper",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "propertiesEndpointAccessResolver",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.PropertiesEndpointAccessResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "endpointObjectMapper",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.DefaultEndpointObjectNameFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties",
            "org.springframework.boot.autoconfigure.jmx.JmxProperties"
          ]
        },
        {
          "name": "eagerlyInitializeJmxEndpointExporter",
          "parameterTypes": []
        },
        {
          "name": "endpointObjectNameFactory",
          "parameterTypes": [
            "javax.management.MBeanServer"
          ]
        },
        {
          "name": "jmxAccessPropertiesOperationFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.EndpointAccessResolver"
          ]
        },
        {
          "name": "jmxAnnotationEndpointDiscoverer",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "jmxIncludeExcludePropertyEndpointFilter",
          "parameterTypes": []
        },
        {
          "name": "jmxMBeanExporter",
          "parameterTypes": [
            "javax.management.MBeanServer",
            "org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getExposure",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties$Exposure",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getInclude",
          "parameterTypes": []
        },
        {
          "name": "setInclude",
          "parameterTypes": [
            "java.util.Set"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
          ]
        },
        {
          "name": "controllerEndpointDiscoverer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "controllerExposeExcludePropertyEndpointFilter",
          "parameterTypes": []
        },
        {
          "name": "endpointMediaTypes",
          "parameterTypes": []
        },
        {
          "name": "pathMappedEndpoints",
          "parameterTypes": [
            "java.util.Collection"
          ]
        },
        {
          "name": "webAccessPropertiesOperationFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.EndpointAccessResolver"
          ]
        },
        {
          "name": "webEndpointDiscoverer",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
            "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "webEndpointPathMapper",
          "parameterTypes": []
        },
        {
          "name": "webExposeExcludePropertyEndpointFilter",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "controllerEndpointHandlerMapping",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
            "org.springframework.boot.actuate.endpoint.EndpointAccessResolver"
          ]
        },
        {
          "name": "serverCodecConfigurerEndpointObjectMapperBeanPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "webEndpointReactiveHandlerMapping",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
            "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
            "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
            "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration$ServerCodecConfigurerEndpointObjectMapperBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "environmentEndpoint",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredReactiveHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "pingHealthContributor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "healthContributorRegistry",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.actuate.health.HealthEndpointGroups",
            "java.util.Map",
            "java.util.Map"
          ]
        },
        {
          "name": "healthEndpoint",
          "parameterTypes": [
            "org.springframework.boot.actuate.health.HealthContributorRegistry",
            "org.springframework.boot.actuate.health.HealthEndpointGroups",
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        },
        {
          "name": "healthEndpointGroupMembershipValidator",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
            "org.springframework.boot.actuate.health.HealthContributorRegistry"
          ]
        },
        {
          "name": "healthEndpointGroups",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        },
        {
          "name": "healthEndpointGroupsBeanPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "healthHttpCodeStatusMapper",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        },
        {
          "name": "healthStatusAggregator",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactiveHealthEndpointWebExtension",
          "parameterTypes": [
            "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
            "org.springframework.boot.actuate.health.HealthEndpointGroups",
            "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration$WebFluxAdditionalHealthEndpointPathsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "healthEndpointWebFluxHandlerMapping",
          "parameterTypes": [
            "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
            "org.springframework.boot.actuate.health.HealthEndpointGroups"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.NoSuchHealthContributorFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactiveHealthContributorRegistry",
          "parameterTypes": [
            "java.util.Map",
            "java.util.Map",
            "org.springframework.boot.actuate.health.HealthEndpointGroups"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorFallback"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "infoEndpoint",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration$LogFileCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "loggersEndpoint",
          "parameterTypes": [
            "org.springframework.boot.logging.LoggingSystem",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration$OnEnabledLoggingSystemCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "heapDumpWebEndpoint",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dumpEndpoint",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "classLoaderMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmCompilationMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmGcMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmHeapPressureMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmInfoMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmMemoryMetrics",
          "parameterTypes": []
        },
        {
          "name": "jvmThreadMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.Log4J2MetricsAutoConfiguration$Log4JCoreLoggerContextCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "logbackMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "meterRegistryCloser",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "meterRegistryPostProcessor",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "micrometerClock",
          "parameterTypes": []
        },
        {
          "name": "propertiesMeterFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "metricsEndpoint",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "diskSpaceMetrics",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        },
        {
          "name": "fileDescriptorMetrics",
          "parameterTypes": []
        },
        {
          "name": "processorMetrics",
          "parameterTypes": []
        },
        {
          "name": "uptimeMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.ValidationFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "simpleConfig",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
          ]
        },
        {
          "name": "simpleMeterRegistry",
          "parameterTypes": [
            "io.micrometer.core.instrument.simple.SimpleConfig",
            "io.micrometer.core.instrument.Clock"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimplePropertiesConfigAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "startupTimeMetrics",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "bindTaskExecutorsToRegistry",
          "parameterTypes": [
            "java.util.Map",
            "io.micrometer.core.instrument.MeterRegistry"
          ]
        },
        {
          "name": "eagerTaskExecutorMetrics",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observationRegistry",
          "parameterTypes": []
        },
        {
          "name": "observationRegistryPostProcessor",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "propertiesObservationFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultMeterObservationHandler",
          "parameterTypes": [
            "io.micrometer.core.instrument.MeterRegistry",
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "metricsObservationHandlerGrouping",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "metricsHttpClientUriTagFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observationWebClientCustomizer",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.reactive.WebFluxObservationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
          ]
        },
        {
          "name": "defaultServerRequestObservationConvention",
          "parameterTypes": []
        },
        {
          "name": "metricsHttpServerUriTagFilter",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.sbom.SbomEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.actuate.sbom.SbomProperties"
          ]
        },
        {
          "name": "sbomEndpoint",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "scheduledTasksEndpoint",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "observabilitySchedulingConfigurer",
          "parameterTypes": [
            "io.micrometer.observation.ObservationRegistry"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.ssl.SslHealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "sslHealthIndicator",
          "parameterTypes": [
            "org.springframework.boot.info.SslInfo"
          ]
        },
        {
          "name": "sslInfo",
          "parameterTypes": [
            "org.springframework.boot.ssl.SslBundles",
            "org.springframework.boot.actuate.autoconfigure.ssl.SslHealthIndicatorProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.ssl.SslHealthIndicatorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "diskSpaceHealthIndicator",
          "parameterTypes": [
            "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.OpenTelemetryEventPublisherBeansApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "mappingsEndpoint",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ReactiveWebConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "dispatcherHandlerMappingDescriptionProvider",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactiveWebChildContextFactory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.beans.BeansEndpoint",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "beans",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.beans.BeansEndpoint$BeanDescriptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getAliases",
          "parameterTypes": []
        },
        {
          "name": "getDependencies",
          "parameterTypes": []
        },
        {
          "name": "getResource",
          "parameterTypes": []
        },
        {
          "name": "getScope",
          "parameterTypes": []
        },
        {
          "name": "getType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.beans.BeansEndpoint$BeansDescriptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getContexts",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.beans.BeansEndpoint$ContextBeansDescriptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getBeans",
          "parameterTypes": []
        },
        {
          "name": "getParentId",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.cache.CachesEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.cache.CachesEndpointWebExtension"
    },
    {
      "type": "org.springframework.boot.actuate.context.ShutdownEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointAccessResolver"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointFilter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.OperationFilter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.OperationResponseBody"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.DeleteOperation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.Endpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointConverter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.ReadOperation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.Selector"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.WriteOperation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.jmx.EndpointObjectNameFactory"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.jmx.JmxEndpointExporter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.jmx.JmxEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.jmx.annotation.JmxEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.AdditionalPathsMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMapper"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$LinksHandler"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AdditionalHealthEndpointPathsWebFluxHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.ControllerEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$WebFluxLinksHandler"
    },
    {
      "type": "org.springframework.boot.actuate.env.EnvironmentEndpoint",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "environment",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.env.EnvironmentEndpoint$EnvironmentDescriptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getActiveProfiles",
          "parameterTypes": []
        },
        {
          "name": "getDefaultProfiles",
          "parameterTypes": []
        },
        {
          "name": "getPropertySources",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertySourceDescriptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getName",
          "parameterTypes": []
        },
        {
          "name": "getProperties",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertyValueDescriptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getOrigin",
          "parameterTypes": []
        },
        {
          "name": "getOriginParents",
          "parameterTypes": []
        },
        {
          "name": "getValue",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension"
    },
    {
      "type": "org.springframework.boot.actuate.health.AbstractHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.CompositeHealth",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getComponents",
          "parameterTypes": []
        },
        {
          "name": "getDetails",
          "parameterTypes": []
        },
        {
          "name": "getStatus",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.health.ContributorRegistry"
    },
    {
      "type": "org.springframework.boot.actuate.health.DefaultContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.DefaultReactiveHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.Health",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getDetails",
          "parameterTypes": []
        },
        {
          "name": "getStatus",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthComponent",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthContributor"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthContributorRegistry"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpoint",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "health",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointGroups"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.health.HttpCodeStatusMapper"
    },
    {
      "type": "org.springframework.boot.actuate.health.PingHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry"
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.SimpleStatusAggregator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.Status",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCode",
          "parameterTypes": []
        },
        {
          "name": "getDescription",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.health.StatusAggregator"
    },
    {
      "type": "org.springframework.boot.actuate.health.SystemHealth",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getGroups",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.info.InfoEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.logging.LogFileWebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.logging.LoggersEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.management.ThreadDumpEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.MetricsEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.web.reactive.client.ObservationWebClientCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.sbom.SbomEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.sbom.SbomEndpointWebExtension"
    },
    {
      "type": "org.springframework.boot.actuate.sbom.SbomProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.ssl.SslHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"
    },
    {
      "type": "org.springframework.boot.actuate.web.exchanges.HttpExchangesEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.HandlerMethodDescription",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getClassName",
          "parameterTypes": []
        },
        {
          "name": "getDescriptor",
          "parameterTypes": []
        },
        {
          "name": "getName",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.MappingDescriptionProvider"
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "mappings",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint$ApplicationMappingsDescriptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getContexts",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint$ContextMappingsDescriptor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getMappings",
          "parameterTypes": []
        },
        {
          "name": "getParentId",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.reactive.DispatcherHandlerMappingDescription",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getDetails",
          "parameterTypes": []
        },
        {
          "name": "getHandler",
          "parameterTypes": []
        },
        {
          "name": "getPredicate",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.reactive.DispatcherHandlerMappingDetails",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getHandlerFunction",
          "parameterTypes": []
        },
        {
          "name": "getHandlerMethod",
          "parameterTypes": []
        },
        {
          "name": "getRequestMappingConditions",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.reactive.DispatcherHandlersMappingDescriptionProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.reactive.RequestMappingConditionsDescription",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getConsumes",
          "parameterTypes": []
        },
        {
          "name": "getHeaders",
          "parameterTypes": []
        },
        {
          "name": "getMethods",
          "parameterTypes": []
        },
        {
          "name": "getParams",
          "parameterTypes": []
        },
        {
          "name": "getPatterns",
          "parameterTypes": []
        },
        {
          "name": "getProduces",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.reactive.RequestMappingConditionsDescription$MediaTypeExpressionDescription",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getMediaType",
          "parameterTypes": []
        },
        {
          "name": "isNegated",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.admin.SpringApplicationAdminMXBean",
      "methods": [
        {
          "name": "getProperty",
          "parameterTypes": [
            "java.lang.String"
          ]
        },
        {
          "name": "isReady",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin"
    },
    {
      "type": "org.springframework.boot.ansi.AnsiOutput$Enabled"
    },
    {
      "type": "org.springframework.boot.ansi.AnsiOutput$EnabledEditor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackage"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureAfter"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureBefore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureOrder"
    },
    {
      "type": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.EnableAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ImportAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SpringBootApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.admin.SpringApplicationAdminJmxAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "springApplicationAdminRegistrar",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$ClassProxyingConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "forceAutoProxyCreatorToUseClassProxying",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "applicationAvailability",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.codec.CodecProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnThreadingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultLifecycleProcessor",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.context.LifecycleProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "propertySourcesPlaceholderConfigurer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "gson",
          "parameterTypes": [
            "com.google.gson.GsonBuilder"
          ]
        },
        {
          "name": "gsonBuilder",
          "parameterTypes": [
            "java.util.List"
          ]
        },
        {
          "name": "standardGsonBuilderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.gson.GsonProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultCodecCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.codec.CodecProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonCodecCustomizer",
          "parameterTypes": [
            "com.fasterxml.jackson.databind.ObjectMapper"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonComponentModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "standardJacksonObjectMapperBuilderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jsonMixinModule",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.jackson.JsonMixinModuleEntries"
          ]
        },
        {
          "name": "jsonMixinModuleEntries",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapperBuilder",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "jacksonObjectMapper",
          "parameterTypes": [
            "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "parameterNamesModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.jmx.JmxProperties"
          ]
        },
        {
          "name": "mbeanExporter",
          "parameterTypes": [
            "org.springframework.jmx.export.naming.ObjectNamingStrategy",
            "org.springframework.beans.factory.BeanFactory"
          ]
        },
        {
          "name": "mbeanServer",
          "parameterTypes": []
        },
        {
          "name": "objectNamingStrategy",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jmx.JmxProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setEnabled",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jmx.ParentAwareNamingStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.netty.NettyProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.netty.NettyProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.reactor.ReactorProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactorResourceFactory",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setShutdownQuietPeriod",
          "parameterTypes": [
            "java.time.Duration"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.BundleContentNotWatchableFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader",
            "org.springframework.boot.autoconfigure.ssl.SslProperties"
          ]
        },
        {
          "name": "fileWatcher",
          "parameterTypes": []
        },
        {
          "name": "sslBundleRegistry",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "sslPropertiesSslBundleRegistrar",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.ssl.FileWatcher"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskExecutorBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskExecutorBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "simpleAsyncTaskSchedulerBuilder",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "threadPoolTaskSchedulerBuilder",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thread.Threading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultValidator",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "methodValidationPostProcessor",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidatorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setIncludeBindingErrors",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
          ]
        },
        {
          "name": "setIncludeMessage",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
          ]
        },
        {
          "name": "setIncludeStacktrace",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttributeEditor"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getError",
          "parameterTypes": []
        },
        {
          "name": "getServlet",
          "parameterTypes": []
        },
        {
          "name": "setPort",
          "parameterTypes": [
            "java.lang.Integer"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getJsp",
          "parameterTypes": []
        },
        {
          "name": "getSession",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "getResources",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getCache",
          "parameterTypes": []
        },
        {
          "name": "getChain",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setPeriod",
          "parameterTypes": [
            "java.time.Duration"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setCache",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "nettyWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.format.WebConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "httpHandler",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "defaultPartHttpMessageReaderCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactiveWebServerFactoryCustomizer",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "nettyReactiveWebServerFactory",
          "parameterTypes": [
            "org.springframework.http.client.ReactorResourceFactory",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "localeContextResolver",
          "parameterTypes": []
        },
        {
          "name": "webFluxConversionService",
          "parameterTypes": []
        },
        {
          "name": "webFluxValidator",
          "parameterTypes": []
        },
        {
          "name": "webSessionManager",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
            "org.springframework.beans.factory.ListableBeanFactory",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "welcomePageRouterFunctionMapping",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext",
            "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
            "org.springframework.boot.autoconfigure.web.WebProperties"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties",
            "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties"
          ]
        },
        {
          "name": "webSessionIdResolver",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.ServerProperties"
          ]
        },
        {
          "name": "errorAttributes",
          "parameterTypes": []
        },
        {
          "name": "errorWebExceptionHandler",
          "parameterTypes": [
            "org.springframework.boot.web.reactive.error.ErrorAttributes",
            "org.springframework.boot.autoconfigure.web.WebProperties",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.http.codec.ServerCodecConfigurer",
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.AutoConfiguredWebClientSsl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webClientHttpConnector",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory"
          ]
        },
        {
          "name": "webClientHttpConnectorCustomizer",
          "parameterTypes": [
            "org.springframework.http.client.reactive.ClientHttpConnector"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$HttpClient5"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$JdkClient"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "reactorClientHttpConnectorFactory",
          "parameterTypes": [
            "org.springframework.http.client.ReactorResourceFactory",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ReactorClientHttpConnectorFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "webClientBuilder",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        },
        {
          "name": "webClientSsl",
          "parameterTypes": [
            "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
            "org.springframework.boot.ssl.SslBundles"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "exchangeStrategiesCustomizer",
          "parameterTypes": [
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailability"
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailabilityBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudPlatform"
    },
    {
      "type": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.FileEncodingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.TypeExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.ConfigurableBootstrapContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataNotFoundAction"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataProperties",
      "fields": [
        {
          "name": "this$0"
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.context.properties.bind.Binder",
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.event.EventPublishingRunListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.SpringApplication",
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.BoundConfigurationProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesScan"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesScanRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.DeprecatedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.NestedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Name"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Nested"
    },
    {
      "type": "org.springframework.boot.convert.DurationUnit"
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.ConditionEvaluationDeltaLoggingListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DevToolsDataSourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.DevToolsProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "liveReloadServer",
          "parameterTypes": [
            "org.springframework.boot.devtools.autoconfigure.DevToolsProperties"
          ]
        },
        {
          "name": "liveReloadServerEventListener",
          "parameterTypes": [
            "org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer"
          ]
        },
        {
          "name": "optionalLiveReloadServer",
          "parameterTypes": [
            "org.springframework.boot.devtools.livereload.LiveReloadServer"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$LiveReloadServerEventListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.devtools.autoconfigure.DevToolsProperties"
          ]
        },
        {
          "name": "classPathFileSystemWatcher",
          "parameterTypes": [
            "org.springframework.boot.devtools.filewatch.FileSystemWatcherFactory",
            "org.springframework.boot.devtools.classpath.ClassPathRestartStrategy"
          ]
        },
        {
          "name": "classPathRestartStrategy",
          "parameterTypes": []
        },
        {
          "name": "conditionEvaluationDeltaLoggingListener",
          "parameterTypes": []
        },
        {
          "name": "fileSystemWatcherFactory",
          "parameterTypes": []
        },
        {
          "name": "restartingClassPathChangedEventListener",
          "parameterTypes": [
            "org.springframework.boot.devtools.filewatch.FileSystemWatcherFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.OnEnabledDevToolsCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.classpath.ClassPathFileSystemWatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.classpath.ClassPathRestartStrategy"
    },
    {
      "type": "org.springframework.boot.devtools.classpath.PatternClassPathRestartStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.env.DevToolsHomePropertiesPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.filewatch.FileSystemWatcherFactory"
    },
    {
      "type": "org.springframework.boot.devtools.livereload.LiveReloadServer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.devtools.logger.DevToolsLogFactory$Listener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.logger.DevToolsLogFactory.Listener"
    },
    {
      "type": "org.springframework.boot.devtools.restart.ConditionalOnInitializedRestarter"
    },
    {
      "type": "org.springframework.boot.devtools.restart.OnInitializedRestarterCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.restart.RestartApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.restart.RestartLauncher"
    },
    {
      "type": "org.springframework.boot.devtools.restart.RestartScope"
    },
    {
      "type": "org.springframework.boot.devtools.restart.RestartScopeInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.restart.classloader.RestartClassLoader",
      "methods": [
        {
          "name": "publicDefineClass",
          "parameterTypes": [
            "java.lang.String",
            "byte[]",
            "java.security.ProtectionDomain"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.system.DevToolsEnablementDeducer",
      "methods": [
        {
          "name": "shouldEnable",
          "parameterTypes": [
            "java.lang.Thread"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.FailureAnalyzers",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.context.ConfigurableApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.AotInitializerNotFoundFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.beans.factory.BeanFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.PropertiesPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.YamlPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.info.BuildProperties"
    },
    {
      "type": "org.springframework.boot.info.GitProperties"
    },
    {
      "type": "org.springframework.boot.info.SslInfo",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.io.Base64ProtocolResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.io.ProtocolResolverApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponentModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
    },
    {
      "type": "org.springframework.boot.liquibase.LiquibaseChangelogMissingFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.loader.launch.JarLauncher"
    },
    {
      "type": "org.springframework.boot.loader.launch.LaunchedClassLoader"
    },
    {
      "type": "org.springframework.boot.loader.launch.Launcher"
    },
    {
      "type": "org.springframework.boot.loader.net.protocol.jar.JarUrlClassLoader"
    },
    {
      "type": "org.springframework.boot.loader.nio.file.NestedFileSystemProvider"
    },
    {
      "type": "org.springframework.boot.logging.AbstractLoggingSystem"
    },
    {
      "type": "org.springframework.boot.logging.LoggingSystem"
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.ColorConverter"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.CorrelationIdConverter"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.EnclosedInSquareBracketsConverter"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.ExtendedWhitespaceThrowablePatternConverter"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.SpringBootConfigurationFactory"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.SpringBootPropertySource"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.SpringEnvironmentLookup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.log4j2.SpringProfileArbiter"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.StructuredLogLayout"
    },
    {
      "type": "org.springframework.boot.logging.log4j2.WhitespaceThrowablePatternConverter"
    },
    {
      "type": "org.springframework.boot.logging.logback.ColorConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.EnclosedInSquareBracketsConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem"
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.logback.RootLogLevelConfigurator"
    },
    {
      "type": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ssl.SslBundleRegistry"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundles"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
      "methods": [
        {
          "name": "byAnnotation",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.client.RestTemplateBuilder"
    },
    {
      "type": "org.springframework.boot.web.codec.CodecCustomizer"
    },
    {
      "type": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.context.ConfigurableReactiveWebEnvironment"
    },
    {
      "type": "org.springframework.boot.web.reactive.context.GenericReactiveWebApplicationContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.error.ErrorAttributes"
    },
    {
      "type": "org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler"
    },
    {
      "type": "org.springframework.boot.web.reactive.function.client.WebClientCustomizer"
    },
    {
      "type": "org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.ConfigurableWebServerFactory"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Jsp",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "getInitParameters",
          "parameterTypes": []
        },
        {
          "name": "setInitParameters",
          "parameterTypes": [
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Session",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setPersistent",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cache.Cache"
    },
    {
      "type": "org.springframework.cache.CacheManager"
    },
    {
      "type": "org.springframework.cache.caffeine.CaffeineCache"
    },
    {
      "type": "org.springframework.cache.interceptor.CacheAspectSupport"
    },
    {
      "type": "org.springframework.cache.jcache.JCacheCache"
    },
    {
      "type": "org.springframework.cglib.core.ClassNameReader",
      "fields": [
        {
          "name": "EARLY_EXIT"
        }
      ]
    },
    {
      "type": "org.springframework.cglib.core.ReflectUtils"
    },
    {
      "type": "org.springframework.cglib.core.Signature"
    },
    {
      "type": "org.springframework.cglib.proxy.Callback"
    },
    {
      "type": "org.springframework.cglib.proxy.Dispatcher"
    },
    {
      "type": "org.springframework.cglib.proxy.Factory"
    },
    {
      "type": "org.springframework.cglib.proxy.MethodInterceptor"
    },
    {
      "type": "org.springframework.cglib.proxy.MethodProxy"
    },
    {
      "type": "org.springframework.cglib.proxy.NoOp"
    },
    {
      "type": "org.springframework.cglib.reflect.FastClass"
    },
    {
      "type": "org.springframework.context.ApplicationContextAware"
    },
    {
      "type": "org.springframework.context.ApplicationListener"
    },
    {
      "type": "org.springframework.context.ApplicationStartupAware"
    },
    {
      "type": "org.springframework.context.EmbeddedValueResolverAware"
    },
    {
      "type": "org.springframework.context.EnvironmentAware"
    },
    {
      "type": "org.springframework.context.Lifecycle"
    },
    {
      "type": "org.springframework.context.LifecycleProcessor"
    },
    {
      "type": "org.springframework.context.Phased"
    },
    {
      "type": "org.springframework.context.ResourceLoaderAware"
    },
    {
      "type": "org.springframework.context.SmartLifecycle"
    },
    {
      "type": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Bean"
    },
    {
      "type": "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
    },
    {
      "type": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan"
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan$Filter"
    },
    {
      "type": "org.springframework.context.annotation.Conditional"
    },
    {
      "type": "org.springframework.context.annotation.Configuration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMetadataReaderFactory",
          "parameterTypes": [
            "org.springframework.core.type.classreading.MetadataReaderFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Import"
    },
    {
      "type": "org.springframework.context.annotation.ImportBeanDefinitionRegistrar"
    },
    {
      "type": "org.springframework.context.annotation.ImportRuntimeHints"
    },
    {
      "type": "org.springframework.context.annotation.Lazy"
    },
    {
      "type": "org.springframework.context.annotation.Primary"
    },
    {
      "type": "org.springframework.context.annotation.Role"
    },
    {
      "type": "org.springframework.context.annotation.Scope"
    },
    {
      "type": "org.springframework.context.event.DefaultEventListenerFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.EventListener"
    },
    {
      "type": "org.springframework.context.event.EventListenerMethodProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.GenericApplicationListener"
    },
    {
      "type": "org.springframework.context.event.SmartApplicationListener"
    },
    {
      "type": "org.springframework.context.support.AbstractApplicationContext"
    },
    {
      "type": "org.springframework.context.support.ApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.GenericApplicationContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.PostProcessorRegistrationDelegate"
    },
    {
      "type": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
    },
    {
      "type": "org.springframework.core.Ordered"
    },
    {
      "type": "org.springframework.core.PriorityOrdered"
    },
    {
      "type": "org.springframework.core.ReactiveAdapterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.annotation.AliasFor"
    },
    {
      "type": "org.springframework.core.annotation.Order"
    },
    {
      "type": "org.springframework.core.convert.support.ConfigurableConversionService"
    },
    {
      "type": "org.springframework.core.convert.support.GenericConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.io.buffer.DataBuffer"
    },
    {
      "type": "org.springframework.core.io.buffer.DataBufferUtils"
    },
    {
      "type": "org.springframework.core.type.classreading.MetadataReaderFactory"
    },
    {
      "type": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"
    },
    {
      "type": "org.springframework.data.cassandra.ReactiveSession"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
    },
    {
      "type": "org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
    },
    {
      "type": "org.springframework.data.jpa.repository.JpaRepository"
    },
    {
      "type": "org.springframework.data.ldap.repository.LdapRepository"
    },
    {
      "type": "org.springframework.data.mongodb.core.MongoTemplate"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveMongoTemplate"
    },
    {
      "type": "org.springframework.data.r2dbc.core.R2dbcEntityTemplate"
    },
    {
      "type": "org.springframework.data.redis.cache.RedisCache"
    },
    {
      "type": "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConnectionFactory"
    },
    {
      "type": "org.springframework.data.redis.core.RedisOperations"
    },
    {
      "type": "org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
    },
    {
      "type": "org.springframework.data.repository.Repository"
    },
    {
      "type": "org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
    },
    {
      "type": "org.springframework.data.web.PageableHandlerMethodArgumentResolver"
    },
    {
      "type": "org.springframework.format.FormatterRegistry"
    },
    {
      "type": "org.springframework.format.support.DefaultFormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.format.support.FormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.hateoas.EntityModel"
    },
    {
      "type": "org.springframework.http.HttpStatus"
    },
    {
      "type": "org.springframework.http.ReactiveHttpInputMessage"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestFactory"
    },
    {
      "type": "org.springframework.http.client.ReactorResourceFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.client.reactive.ClientHttpConnector"
    },
    {
      "type": "org.springframework.http.client.reactive.ReactorClientHttpConnector",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.codec.ClientCodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.CodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.ServerCodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
    },
    {
      "type": "org.springframework.http.codec.support.BaseCodecConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.http.converter.HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.server.reactive.HttpHandler"
    },
    {
      "type": "org.springframework.http.server.reactive.observation.DefaultServerRequestObservationConvention",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.server.reactive.observation.ServerRequestObservationConvention"
    },
    {
      "type": "org.springframework.integration.config.EnableIntegration"
    },
    {
      "type": "org.springframework.integration.graph.IntegrationGraphServer"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
    },
    {
      "type": "org.springframework.jdbc.datasource.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.jms.core.JmsTemplate"
    },
    {
      "type": "org.springframework.jmx.export.MBeanExportOperations"
    },
    {
      "type": "org.springframework.jmx.export.MBeanExporter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jmx.export.annotation.AnnotationMBeanExporter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jmx.export.annotation.ManagedOperationParameters"
    },
    {
      "type": "org.springframework.jmx.export.naming.MetadataNamingStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.jmx.export.naming.ObjectNamingStrategy"
    },
    {
      "type": "org.springframework.jmx.support.MBeanRegistrationSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.KafkaTemplate"
    },
    {
      "type": "org.springframework.kafka.core.ProducerFactory"
    },
    {
      "type": "org.springframework.ldap.core.ContextSource"
    },
    {
      "type": "org.springframework.ldap.core.LdapOperations"
    },
    {
      "type": "org.springframework.mail.javamail.JavaMailSenderImpl"
    },
    {
      "type": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
    },
    {
      "type": "org.springframework.oxm.Marshaller"
    },
    {
      "type": "org.springframework.r2dbc.connection.R2dbcTransactionManager"
    },
    {
      "type": "org.springframework.r2dbc.connection.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.scheduling.annotation.SchedulingConfigurer"
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
    },
    {
      "type": "org.springframework.security.authentication.AuthenticationManager"
    },
    {
      "type": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher"
    },
    {
      "type": "org.springframework.security.authentication.ReactiveAuthenticationManager"
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
    },
    {
      "type": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
    },
    {
      "type": "org.springframework.security.config.http.SessionCreationPolicy"
    },
    {
      "type": "org.springframework.security.core.context.ReactiveSecurityContextHolder"
    },
    {
      "type": "org.springframework.security.oauth2.server.authorization.OAuth2Authorization"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
    },
    {
      "type": "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
    },
    {
      "type": "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
    },
    {
      "type": "org.springframework.security.web.util.matcher.RequestMatcher"
    },
    {
      "type": "org.springframework.session.Session"
    },
    {
      "type": "org.springframework.stereotype.Component"
    },
    {
      "type": "org.springframework.stereotype.Controller"
    },
    {
      "type": "org.springframework.stereotype.Indexed"
    },
    {
      "type": "org.springframework.stereotype.Service"
    },
    {
      "type": "org.springframework.transaction.PlatformTransactionManager"
    },
    {
      "type": "org.springframework.util.ClassUtils"
    },
    {
      "type": "org.springframework.util.LinkedMultiValueMap",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.MultiValueMap"
    },
    {
      "type": "org.springframework.util.MultiValueMapAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.FieldError"
    },
    {
      "type": "org.springframework.validation.SmartValidator"
    },
    {
      "type": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.bind.annotation.ExceptionHandler"
    },
    {
      "type": "org.springframework.web.bind.annotation.Mapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.PostMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestBody"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMethod",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseBody"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseStatus"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestController"
    },
    {
      "type": "org.springframework.web.bind.support.WebExchangeBindException"
    },
    {
      "type": "org.springframework.web.client.RestClient"
    },
    {
      "type": "org.springframework.web.client.RestClient$Builder"
    },
    {
      "type": "org.springframework.web.client.RestTemplate"
    },
    {
      "type": "org.springframework.web.context.ConfigurableWebEnvironment"
    },
    {
      "type": "org.springframework.web.context.WebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.support.GenericWebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.support.ServletContextResource"
    },
    {
      "type": "org.springframework.web.cors.reactive.PreFlightRequestHandler"
    },
    {
      "type": "org.springframework.web.filter.CharacterEncodingFilter"
    },
    {
      "type": "org.springframework.web.reactive.DispatchExceptionHandler"
    },
    {
      "type": "org.springframework.web.reactive.DispatcherHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.HandlerAdapter"
    },
    {
      "type": "org.springframework.web.reactive.HandlerMapping"
    },
    {
      "type": "org.springframework.web.reactive.HandlerResult"
    },
    {
      "type": "org.springframework.web.reactive.HandlerResultHandler"
    },
    {
      "type": "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
    },
    {
      "type": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setConfigurers",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.web.reactive.config.EnableWebFlux"
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurationSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "handlerFunctionAdapter",
          "parameterTypes": []
        },
        {
          "name": "requestMappingHandlerAdapter",
          "parameterTypes": [
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.http.codec.ServerCodecConfigurer",
            "org.springframework.format.support.FormattingConversionService",
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver",
            "org.springframework.validation.Validator"
          ]
        },
        {
          "name": "requestMappingHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
          ]
        },
        {
          "name": "resourceHandlerMapping",
          "parameterTypes": [
            "org.springframework.web.reactive.resource.ResourceUrlProvider"
          ]
        },
        {
          "name": "resourceUrlProvider",
          "parameterTypes": []
        },
        {
          "name": "responseBodyResultHandler",
          "parameterTypes": [
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.http.codec.ServerCodecConfigurer",
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
          ]
        },
        {
          "name": "responseEntityResultHandler",
          "parameterTypes": [
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.http.codec.ServerCodecConfigurer",
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
          ]
        },
        {
          "name": "responseStatusExceptionHandler",
          "parameterTypes": []
        },
        {
          "name": "routerFunctionMapping",
          "parameterTypes": [
            "org.springframework.http.codec.ServerCodecConfigurer"
          ]
        },
        {
          "name": "serverCodecConfigurer",
          "parameterTypes": []
        },
        {
          "name": "serverResponseResultHandler",
          "parameterTypes": [
            "org.springframework.http.codec.ServerCodecConfigurer"
          ]
        },
        {
          "name": "simpleHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "viewResolutionResultHandler",
          "parameterTypes": [
            "org.springframework.core.ReactiveAdapterRegistry",
            "org.springframework.web.reactive.accept.RequestedContentTypeResolver"
          ]
        },
        {
          "name": "webFluxAdapterRegistry",
          "parameterTypes": []
        },
        {
          "name": "webFluxContentTypeResolver",
          "parameterTypes": []
        },
        {
          "name": "webFluxWebSocketHandlerAdapter",
          "parameterTypes": []
        },
        {
          "name": "webHandler",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurer"
    },
    {
      "type": "org.springframework.web.reactive.function.client.DefaultWebClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.client.DefaultWebClientBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient$Builder"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient$RequestHeadersSpec"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient$RequestHeadersUriSpec"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient$ResponseSpec"
    },
    {
      "type": "org.springframework.web.reactive.function.server.HandlerFunction"
    },
    {
      "type": "org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.AbstractHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.AbstractUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.SimpleUrlHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.resource.ResourceUrlProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.HandlerResultHandlerSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.SimpleHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler"
    },
    {
      "type": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler"
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.WebExceptionHandler"
    },
    {
      "type": "org.springframework.web.server.WebHandler"
    },
    {
      "type": "org.springframework.web.server.adapter.HttpWebHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.handler.ResponseStatusExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.handler.WebHandlerDecorator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.i18n.LocaleContextResolver"
    },
    {
      "type": "org.springframework.web.server.session.CookieWebSessionIdResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.session.DefaultWebSessionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.session.WebSessionIdResolver"
    },
    {
      "type": "org.springframework.web.server.session.WebSessionManager"
    },
    {
      "type": "org.springframework.web.servlet.DispatcherServlet"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.EnableWebMvc"
    },
    {
      "type": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
    },
    {
      "type": "org.springframework.ws.transport.http.MessageDispatcherServlet"
    },
    {
      "type": "org.synchronoss.cloud.nio.multipart.NioMultipartParser"
    },
    {
      "type": "org.thymeleaf.spring6.SpringTemplateEngine"
    },
    {
      "type": "org.webjars.WebJarAssetLocator"
    },
    {
      "type": "org.webjars.WebJarVersionLocator"
    },
    {
      "type": "org.xnio.SslClientAuthMode"
    },
    {
      "type": "org.yaml.snakeyaml.Yaml"
    },
    {
      "type": "org.zeroturnaround.javarebel.Integration"
    },
    {
      "type": "org.zeroturnaround.javarebel.ReloaderFactory"
    },
    {
      "type": "reactivefeign.webclient.WebReactiveFeign"
    },
    {
      "type": "reactivefeign.webclient.WebReactiveFeign$Builder"
    },
    {
      "type": "reactor.core.Exceptions"
    },
    {
      "type": "reactor.core.publisher.BaseSubscriber",
      "fields": [
        {
          "name": "subscription"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.BlockingSingleSubscriber"
    },
    {
      "type": "reactor.core.publisher.Flux"
    },
    {
      "type": "reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxConcatIterable$ConcatIterableSubscriber",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxConcatMapNoPrefetch$FluxConcatMapNoPrefetchSubscriber",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxCreate$BaseSink",
      "fields": [
        {
          "name": "disposable"
        },
        {
          "name": "requestConsumer"
        },
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxCreate$BufferAsyncSink",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxCreate$SerializedFluxSink",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxDoFinally$DoFinallySubscriber",
      "fields": [
        {
          "name": "once"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxFirstWithSignal$RaceCoordinator",
      "fields": [
        {
          "name": "winner"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxIterable$IterableSubscription",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxPublish$PubSubInner",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxPublish$PublishSubscriber",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "state"
        },
        {
          "name": "subscribers"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber",
      "fields": [
        {
          "name": "index"
        },
        {
          "name": "timeout"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber",
      "fields": [
        {
          "name": "s"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Hooks"
    },
    {
      "type": "reactor.core.publisher.LambdaMonoSubscriber",
      "fields": [
        {
          "name": "subscription"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.LambdaSubscriber",
      "fields": [
        {
          "name": "subscription"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Mono"
    },
    {
      "type": "reactor.core.publisher.MonoCacheInvalidateIf",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoCacheInvalidateIf$CoordinatorSubscriber",
      "fields": [
        {
          "name": "subscribers"
        },
        {
          "name": "upstream"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoCacheTime",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoCallable$MonoCallableSubscription",
      "fields": [
        {
          "name": "requestedOnce"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoCompletionStage$MonoCompletionStageSubscription",
      "fields": [
        {
          "name": "requestedOnce"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoCreate$DefaultMonoSink",
      "fields": [
        {
          "name": "disposable"
        },
        {
          "name": "requestConsumer"
        },
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoDelay$MonoDelayRunnable",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoFlatMap$FlatMapMain",
      "fields": [
        {
          "name": "second"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain",
      "fields": [
        {
          "name": "inner"
        },
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoNext$NextSubscriber",
      "fields": [
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoWhen$WhenCoordinator",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.MonoWhen$WhenInner",
      "fields": [
        {
          "name": "s"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$BaseFluxToMonoOperator",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$DeferredSubscription",
      "fields": [
        {
          "name": "requested"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$MonoInnerProducerBase",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$MonoSubscriber",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$MultiSubscriptionSubscriber",
      "fields": [
        {
          "name": "missedProduced"
        },
        {
          "name": "missedRequested"
        },
        {
          "name": "missedSubscription"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.Operators$ScalarSubscription",
      "fields": [
        {
          "name": "once"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.SinkEmptyMulticast",
      "fields": [
        {
          "name": "subscribers"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.SinkManyEmitterProcessor",
      "fields": [
        {
          "name": "error"
        },
        {
          "name": "s"
        },
        {
          "name": "subscribers"
        },
        {
          "name": "upstreamDisposable"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.publisher.SinksSpecs$AbstractSerializedSink",
      "fields": [
        {
          "name": "lockedAt"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.BoundedElasticScheduler",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.BoundedElasticScheduler$BoundedServices",
      "fields": [
        {
          "name": "busyStates"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.BoundedElasticScheduler$BoundedState",
      "fields": [
        {
          "name": "markCount"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.ParallelScheduler",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.core.scheduler.SchedulerTask",
      "fields": [
        {
          "name": "future"
        },
        {
          "name": "parent"
        }
      ]
    },
    {
      "type": "reactor.netty.channel.ChannelOperations",
      "fields": [
        {
          "name": "outboundSubscription"
        }
      ]
    },
    {
      "type": "reactor.netty.channel.ChannelOperationsHandler"
    },
    {
      "type": "reactor.netty.channel.FluxReceive",
      "fields": [
        {
          "name": "receiverCancel"
        }
      ]
    },
    {
      "type": "reactor.netty.http.Cookies",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.netty.http.HttpOperations",
      "fields": [
        {
          "name": "statusAndHeadersSent"
        }
      ]
    },
    {
      "type": "reactor.netty.http.client.HttpClient"
    },
    {
      "type": "reactor.netty.http.server.HttpServer"
    },
    {
      "type": "reactor.netty.http.server.HttpServerResponse"
    },
    {
      "type": "reactor.netty.http.server.HttpTrafficHandler"
    },
    {
      "type": "reactor.netty.internal.shaded.reactor.pool.AbstractPool$AbstractPooledRef",
      "fields": [
        {
          "name": "state"
        }
      ]
    },
    {
      "type": "reactor.netty.internal.shaded.reactor.pool.AllocationStrategies$SizeBasedAllocationStrategy",
      "fields": [
        {
          "name": "permits"
        }
      ]
    },
    {
      "type": "reactor.netty.internal.shaded.reactor.pool.SimpleDequePool",
      "fields": [
        {
          "name": "acquired"
        },
        {
          "name": "idleResources"
        },
        {
          "name": "idleSize"
        },
        {
          "name": "pending"
        },
        {
          "name": "pendingSize"
        },
        {
          "name": "wip"
        }
      ]
    },
    {
      "type": "reactor.netty.internal.shaded.reactor.pool.SimpleDequePool$QueuePoolRecyclerInner",
      "fields": [
        {
          "name": "once"
        }
      ]
    },
    {
      "type": "reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer"
    },
    {
      "type": "reactor.netty.tcp.SslProvider$SslReadHandler"
    },
    {
      "type": "reactor.netty.transport.ServerTransport$Acceptor"
    },
    {
      "type": "reactor.netty.transport.ServerTransport$AcceptorInitializer"
    },
    {
      "type": "reactor.netty.transport.TransportConfig$TransportChannelInitializer"
    },
    {
      "type": "reactor.netty.transport.TransportConnector$MonoChannelPromise",
      "fields": [
        {
          "name": "result"
        }
      ]
    },
    {
      "type": "reactor.netty5.http.client.HttpClient"
    },
    {
      "type": "reactor.netty5.http.server.HttpServerResponse"
    },
    {
      "type": "reactor.tools.agent.ReactorDebugAgent"
    },
    {
      "type": "reactor.util.concurrent.MpscLinkedQueue",
      "fields": [
        {
          "name": "consumerNode"
        },
        {
          "name": "producerNode"
        }
      ]
    },
    {
      "type": "reactor.util.concurrent.MpscLinkedQueue$LinkedQueueNode",
      "fields": [
        {
          "name": "next"
        }
      ]
    },
    {
      "type": "reactor.util.concurrent.SpscArrayQueueConsumer",
      "fields": [
        {
          "name": "consumerIndex"
        }
      ]
    },
    {
      "type": "reactor.util.concurrent.SpscArrayQueueProducer",
      "fields": [
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "reactor.util.concurrent.SpscLinkedArrayQueue",
      "fields": [
        {
          "name": "consumerIndex"
        },
        {
          "name": "producerIndex"
        }
      ]
    },
    {
      "type": "sun.management.ClassLoadingImpl"
    },
    {
      "type": "sun.management.CompilationImpl"
    },
    {
      "type": "sun.management.ManagementFactoryHelper$1"
    },
    {
      "type": "sun.management.ManagementFactoryHelper$PlatformLoggingImpl"
    },
    {
      "type": "sun.management.MemoryImpl"
    },
    {
      "type": "sun.management.MemoryManagerImpl"
    },
    {
      "type": "sun.management.MemoryPoolImpl"
    },
    {
      "type": "sun.management.RuntimeImpl"
    },
    {
      "type": "sun.misc.SharedSecrets"
    },
    {
      "type": "sun.misc.Unsafe",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "invokeCleaner",
          "parameterTypes": [
            "java.nio.ByteBuffer"
          ]
        }
      ]
    },
    {
      "type": "sun.nio.ch.SelectorImpl",
      "fields": [
        {
          "name": "publicSelectedKeys"
        },
        {
          "name": "selectedKeys"
        }
      ]
    },
    {
      "type": "sun.reflect.ReflectionFactory",
      "methods": [
        {
          "name": "getReflectionFactory",
          "parameterTypes": []
        },
        {
          "name": "newConstructorForSerialization",
          "parameterTypes": [
            "java.lang.Class",
            "java.lang.reflect.Constructor"
          ]
        }
      ]
    },
    {
      "type": "sun.reflect.misc.Trampoline",
      "methods": [
        {
          "name": "invoke",
          "parameterTypes": [
            "java.lang.reflect.Method",
            "java.lang.Object",
            "java.lang.Object[]"
          ]
        }
      ]
    },
    {
      "type": "sun.rmi.registry.RegistryImpl_Stub"
    },
    {
      "type": "sun.rmi.transport.DGCImpl_Skel",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.rmi.transport.DGCImpl_Stub",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.rmi.server.RemoteRef"
          ]
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DRBG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA224withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.DSA$SHA256withDSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$DualFormatJKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.JavaKeyStore$JKS",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA224",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA384",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA5$SHA512",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.certpath.PKIXCertPathValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.PSSParameters",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAPSSSignature",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA224withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.KeyManagerFactoryImpl$SunX509",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$DefaultSSLContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.SSLContextImpl$TLSContext",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.IssuerAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "zipkin2.reporter.Encoding"
    },
    {
      "type": {
        "proxy": [
          "io.camunda.rpa.runtime.secrets.AuthClient"
        ]
      },
      "allDeclaredFields": true
    },
    {
      "type": {
        "proxy": [
          "io.camunda.rpa.runtime.secrets.SecretsClient"
        ]
      },
      "allDeclaredFields": true
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.ParameterizedType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.TypeVariable",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.WildcardType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.actuate.endpoint.annotation.Endpoint"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.context.properties.ConfigurationProperties"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.context.event.EventListener"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.web.bind.annotation.RequestMapping"
        ]
      }
    }
  ],
  "resources": [
    {
      "glob": "META-INF/build-info.properties"
    },
    {
      "glob": "META-INF/io.netty.versions.properties"
    },
    {
      "glob": "META-INF/log4j-provider.properties"
    },
    {
      "glob": "META-INF/native-image/sbom.json"
    },
    {
      "glob": "META-INF/native/libnetty_tcnative.so"
    },
    {
      "glob": "META-INF/native/libnetty_tcnative_linux_x86_64.so"
    },
    {
      "glob": "META-INF/native/libnetty_tcnative_linux_x86_64_arch.so"
    },
    {
      "glob": "META-INF/native/libnetty_tcnative_linux_x86_64_fedora.so"
    },
    {
      "glob": "META-INF/native/libnetty_tcnative_x86_64.so"
    },
    {
      "glob": "META-INF/native/libnetty_transport_native_epoll_x86_64.so"
    },
    {
      "glob": "META-INF/native/netty_tcnative.dll"
    },
    {
      "glob": "META-INF/native/netty_tcnative_windows_x86_64.dll"
    },
    {
      "glob": "META-INF/native/netty_tcnative_x86_64.dll"
    },
    {
      "glob": "META-INF/org/apache/logging/log4j/core/config/plugins/Log4j2Plugins.dat"
    },
    {
      "glob": "META-INF/resources/index.html"
    },
    {
      "glob": "META-INF/resources/status"
    },
    {
      "glob": "META-INF/sbom/application.cdx.json"
    },
    {
      "glob": "META-INF/sbom/bom.json"
    },
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/io.grpc.LoadBalancerProvider"
    },
    {
      "glob": "META-INF/services/io.grpc.NameResolverProvider"
    },
    {
      "glob": "META-INF/services/jakarta.el.ExpressionFactory"
    },
    {
      "glob": "META-INF/services/jakarta.validation.ConstraintValidator"
    },
    {
      "glob": "META-INF/services/jakarta.validation.spi.ValidationProvider"
    },
    {
      "glob": "META-INF/services/jakarta.validation.valueextraction.ValueExtractor"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.net.spi.InetAddressResolverProvider"
    },
    {
      "glob": "META-INF/services/java.net.spi.URLStreamHandlerProvider"
    },
    {
      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
    },
    {
      "glob": "META-INF/services/java.nio.file.spi.FileSystemProvider"
    },
    {
      "glob": "META-INF/services/java.rmi.server.RMIClassLoaderSpi"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/javax.management.remote.JMXConnectorServerProvider"
    },
    {
      "glob": "META-INF/services/org.apache.logging.log4j.core.util.ContextDataProvider"
    },
    {
      "glob": "META-INF/services/org.apache.logging.log4j.core.util.WatchEventService"
    },
    {
      "glob": "META-INF/services/org.apache.logging.log4j.spi.Provider"
    },
    {
      "glob": "META-INF/services/org.apache.logging.log4j.util.PropertySource"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "META-INF/spring-autoconfigure-metadata.properties"
    },
    {
      "glob": "META-INF/spring-devtools.properties"
    },
    {
      "glob": "META-INF/spring.components"
    },
    {
      "glob": "META-INF/spring.factories"
    },
    {
      "glob": "META-INF/spring.integration.properties"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.replacements"
    },
    {
      "glob": "META-INF/validation.xml"
    },
    {
      "glob": "application-camunda-saas.yaml"
    },
    {
      "glob": "application-default.properties"
    },
    {
      "glob": "application-default.xml"
    },
    {
      "glob": "application-default.yaml"
    },
    {
      "glob": "application-default.yml"
    },
    {
      "glob": "application-local.xml"
    },
    {
      "glob": "application-local.yaml"
    },
    {
      "glob": "application-local.yml"
    },
    {
      "glob": "application-my-c8-cluster.xml"
    },
    {
      "glob": "application-my-c8-cluster.yaml"
    },
    {
      "glob": "application-my-c8-cluster.yml"
    },
    {
      "glob": "application.properties"
    },
    {
      "glob": "application.xml"
    },
    {
      "glob": "application.yaml"
    },
    {
      "glob": "application.yml"
    },
    {
      "glob": "banner.txt"
    },
    {
      "glob": "client-java.properties"
    },
    {
      "glob": "config/application-default.properties"
    },
    {
      "glob": "config/application-default.xml"
    },
    {
      "glob": "config/application-default.yaml"
    },
    {
      "glob": "config/application-default.yml"
    },
    {
      "glob": "config/application-local.properties"
    },
    {
      "glob": "config/application-local.xml"
    },
    {
      "glob": "config/application-local.yaml"
    },
    {
      "glob": "config/application-local.yml"
    },
    {
      "glob": "config/application-my-c8-cluster.properties"
    },
    {
      "glob": "config/application-my-c8-cluster.xml"
    },
    {
      "glob": "config/application-my-c8-cluster.yaml"
    },
    {
      "glob": "config/application-my-c8-cluster.yml"
    },
    {
      "glob": "config/application.properties"
    },
    {
      "glob": "config/application.xml"
    },
    {
      "glob": "config/application.yaml"
    },
    {
      "glob": "config/application.yml"
    },
    {
      "glob": "config/rpa-runtime-default.properties"
    },
    {
      "glob": "config/rpa-runtime-default.xml"
    },
    {
      "glob": "config/rpa-runtime-default.yaml"
    },
    {
      "glob": "config/rpa-runtime-default.yml"
    },
    {
      "glob": "config/rpa-runtime-local.properties"
    },
    {
      "glob": "config/rpa-runtime-local.xml"
    },
    {
      "glob": "config/rpa-runtime-local.yaml"
    },
    {
      "glob": "config/rpa-runtime-local.yml"
    },
    {
      "glob": "config/rpa-runtime-my-c8-cluster.properties"
    },
    {
      "glob": "config/rpa-runtime-my-c8-cluster.xml"
    },
    {
      "glob": "config/rpa-runtime-my-c8-cluster.yaml"
    },
    {
      "glob": "config/rpa-runtime-my-c8-cluster.yml"
    },
    {
      "glob": "config/rpa-runtime.properties"
    },
    {
      "glob": "config/rpa-runtime.xml"
    },
    {
      "glob": "config/rpa-runtime.yaml"
    },
    {
      "glob": "config/rpa-runtime.yml"
    },
    {
      "glob": "git.properties"
    },
    {
      "glob": "home/pounder/workspace/camunda/rpa-runtime-java-poc/python/venv/"
    },
    {
      "glob": "io/camunda/rpa/runtime/"
    },
    {
      "glob": "io/camunda/rpa/runtime/RpaRuntimeJavaPocApplication.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/pexec/ProcessService$ExecutionCustomizer.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/pexec/ProcessService$ExecutionResult.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/pexec/ProcessService$StreamHandler.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/pexec/ProcessService.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/python/PythonProvisioner$PythonExecutionEnvironment.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/python/PythonProvisioner.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/python/PythonService.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/robot/RobotService$RobotEnvironment.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/robot/RobotService.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/script/ScriptManager.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/script/api/ScriptController.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/secrets/SecretsClientConfiguration.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/secrets/SecretsService$TokenWithAbsoluteExpiry.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/secrets/SecretsService.class"
    },
    {
      "glob": "io/camunda/rpa/runtime/zeebe/ZeebeJobWorkerManager.class"
    },
    {
      "glob": "io/camunda/zeebe/spring/client/configuration/AnnotationProcessorConfiguration.class"
    },
    {
      "glob": "io/camunda/zeebe/spring/client/configuration/CamundaAutoConfiguration.class"
    },
    {
      "glob": "io/camunda/zeebe/spring/client/configuration/ExecutorServiceConfiguration.class"
    },
    {
      "glob": "io/camunda/zeebe/spring/client/configuration/JsonMapperConfiguration.class"
    },
    {
      "glob": "io/camunda/zeebe/spring/client/configuration/MetricsDefaultConfiguration.class"
    },
    {
      "glob": "io/camunda/zeebe/spring/client/configuration/ZeebeActuatorConfiguration.class"
    },
    {
      "glob": "io/camunda/zeebe/spring/client/configuration/ZeebeClientAllAutoConfiguration.class"
    },
    {
      "glob": "io/camunda/zeebe/spring/client/configuration/ZeebeClientProdAutoConfiguration.class"
    },
    {
      "glob": "jndi.properties"
    },
    {
      "glob": "log4j2.StatusLogger.properties"
    },
    {
      "glob": "log4j2.component.properties"
    },
    {
      "glob": "log4j2.system.properties"
    },
    {
      "glob": "logback-spring.groovy"
    },
    {
      "glob": "logback-spring.xml"
    },
    {
      "glob": "logback-test-spring.groovy"
    },
    {
      "glob": "logback-test-spring.xml"
    },
    {
      "glob": "logback-test.groovy"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback-test.xml"
    },
    {
      "glob": "logback.groovy"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "glob": "logback.xml"
    },
    {
      "glob": "messages.properties"
    },
    {
      "glob": "org/apache/hc/client5/http/psl/org/publicsuffix/list/effective_tld_names.dat"
    },
    {
      "glob": "org/springframework/beans/factory/Aware.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanFactoryAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/SmartInitializingSingleton.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/BeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/audit/AuditAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/availability/AvailabilityHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/availability/AvailabilityProbesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/beans/BeansEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/cache/CachesEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/condition/ConditionsReportEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/context/ShutdownEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/context/properties/ConfigurationPropertiesReportEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/EndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/condition/ConditionalOnAvailableEndpoint.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/jackson/JacksonEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/jmx/JmxEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointAutoConfiguration$WebEndpointServletConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration$ServerCodecConfigurerEndpointObjectMapperBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/ConditionalOnEnabledHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$AdaptedReactiveHealthContributors.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointReactiveWebExtensionConfiguration$WebFluxAdditionalHealthEndpointPathsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointReactiveWebExtensionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/ReactiveHealthEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/info/InfoContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/info/InfoEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/logging/LogFileWebEndpointAutoConfiguration$LogFileCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/logging/LogFileWebEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/logging/LoggersEndpointAutoConfiguration$OnEnabledLoggingSystemCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/logging/LoggersEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/management/HeapDumpWebEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/management/ThreadDumpEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition$NoMeterRegistryCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition$SingleInjectableMeterRegistry.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/JvmMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/Log4J2MetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/LogbackMetricsAutoConfiguration$LogbackLoggingCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/LogbackMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration$MeterRegistryCloser.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/NoOpMeterRegistryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/SystemMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$Cache2kCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$CaffeineCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$HazelcastCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$JCacheCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$RedisCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/ConditionalOnEnabledMetricsExport.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/integration/IntegrationMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/startup/StartupTimeMetricsListenerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/task/TaskExecutorMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration$TracingAndMetricsObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MetricsWithTracingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$ObservedAspectConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$OnlyMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$OnlyTracingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/HttpClientObservationsAutoConfiguration$MeterFilterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/HttpClientObservationsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/RestClientObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/RestTemplateObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/WebClientObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/reactive/WebFluxObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/sbom/SbomEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksObservabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/security/servlet/ManagementWebSecurityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/security/servlet/SecurityRequestMatchersManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/ssl/SslHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/startup/StartupEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/system/DiskSpaceHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/ManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesAutoConfiguration$ReactiveHttpExchangesConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesAutoConfiguration$ServletHttpExchangesConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/jersey/JerseyChildManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/jersey/JerseySameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/mappings/MappingsEndpointAutoConfiguration$ReactiveWebConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/mappings/MappingsEndpointAutoConfiguration$ServletWebConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/mappings/MappingsEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementChildContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ConditionalOnManagementPort.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/EnableManagementContext.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$DifferentManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$SameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/servlet/ServletManagementChildContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/servlet/WebMvcEndpointChildContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AbstractDependsOnBeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureAfter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureBefore.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureOrder.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ImportAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ImportAutoConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$ClassProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/availability/ApplicationAvailabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/GenericCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/NoOpCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/SimpleCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnNotWarDeployment.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnProperty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnResource.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/ConfigurationPropertiesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/LifecycleAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration$StandardGsonBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/HttpClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$DefaultCodecsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$JacksonCodecConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration$GitResourceAvailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonAutoConfigurationRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonMixinConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$ParameterNamesModuleConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/netty/NettyAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/ReactorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/netty/ReactorNettyConfigurations$ReactorResourceFactoryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/R2dbcInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition$ModeIsNever.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/SslAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$TaskExecutorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$TaskSchedulerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/PrimaryDefaultValidatorPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$JettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration$AnnotationConfig.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveMultipartAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedJetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedNetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedTomcat.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedUndertow.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$EnableWebFluxConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$MaxIdleTimeInMemoryWebSessionStore.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$ProblemDetailsErrorHandlingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$ResourceChainCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$WebFluxConfig.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$WelcomePageConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebSessionIdResolverAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/error/ErrorWebFluxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactoryConfiguration$HttpClient5.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactoryConfiguration$JdkClient.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactoryConfiguration$ReactorNetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration$WebClientCodecsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration$DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration$DevToolsDataSourceCondition.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration$NonEmbeddedInMemoryDatabaseShutdownExecutor.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration$LiveReloadConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration$LiveReloadServerEventListener.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration$RestartConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/devtools/env/devtools-property-defaults.properties"
    },
    {
      "glob": "org/springframework/boot/devtools/restart/ConditionalOnInitializedRestarter.class"
    },
    {
      "glob": "org/springframework/boot/sql/init/dependency/DatabaseInitializationDependencyConfigurer.class"
    },
    {
      "glob": "org/springframework/context/ApplicationContextAware.class"
    },
    {
      "glob": "org/springframework/context/annotation/Conditional.class"
    },
    {
      "glob": "org/springframework/context/annotation/Configuration.class"
    },
    {
      "glob": "org/springframework/context/annotation/DeferredImportSelector.class"
    },
    {
      "glob": "org/springframework/context/annotation/Import.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportBeanDefinitionRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportRuntimeHints.class"
    },
    {
      "glob": "org/springframework/context/annotation/Lazy.class"
    },
    {
      "glob": "org/springframework/core/Ordered.class"
    },
    {
      "glob": "org/springframework/core/annotation/Order.class"
    },
    {
      "glob": "org/springframework/http/codec/CodecConfigurer.properties"
    },
    {
      "glob": "org/springframework/web/bind/annotation/ResponseBody.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RestController.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/DelegatingWebFluxConfiguration.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport$EmptyHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport$NoOpValidator.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport$NoUpgradeStrategyWebSocketService.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurer.class"
    },
    {
      "glob": "public/index.html"
    },
    {
      "glob": "public/status"
    },
    {
      "glob": "python/requirements.txt"
    },
    {
      "glob": "python/venv/"
    },
    {
      "glob": "resources/index.html"
    },
    {
      "glob": "resources/status"
    },
    {
      "glob": "rpa-runtime-default.properties"
    },
    {
      "glob": "rpa-runtime-default.xml"
    },
    {
      "glob": "rpa-runtime-default.yaml"
    },
    {
      "glob": "rpa-runtime-default.yml"
    },
    {
      "glob": "rpa-runtime-local.properties"
    },
    {
      "glob": "rpa-runtime-local.xml"
    },
    {
      "glob": "rpa-runtime-local.yaml"
    },
    {
      "glob": "rpa-runtime-local.yml"
    },
    {
      "glob": "rpa-runtime-my-c8-cluster.properties"
    },
    {
      "glob": "rpa-runtime-my-c8-cluster.xml"
    },
    {
      "glob": "rpa-runtime-my-c8-cluster.yaml"
    },
    {
      "glob": "rpa-runtime-my-c8-cluster.yml"
    },
    {
      "glob": "rpa-runtime.properties"
    },
    {
      "glob": "rpa-runtime.xml"
    },
    {
      "glob": "rpa-runtime.yaml"
    },
    {
      "glob": "rpa-runtime.yml"
    },
    {
      "glob": "scripts"
    },
    {
      "glob": "spring.properties"
    },
    {
      "glob": "static/index.html"
    },
    {
      "glob": "static/status"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt74b/nfkc.nrm"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt74b/uprops.icu"
    },
    {
      "module": "java.base",
      "glob": "sun/net/idn/uidna.spp"
    },
    {
      "module": "jdk.jfr",
      "glob": "jdk/jfr/internal/query/view.ini"
    }
  ],
  "bundles": [],
  "serialization": [
    {
      "type": "byte[]"
    },
    {
      "type": "java.lang.Boolean"
    },
    {
      "type": "java.lang.Double"
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.Long"
    },
    {
      "type": "java.lang.Number"
    },
    {
      "type": "java.lang.StackTraceElement"
    },
    {
      "type": "java.lang.StackTraceElement[]"
    },
    {
      "type": "java.lang.String"
    },
    {
      "type": "java.lang.Throwable"
    },
    {
      "type": "java.rmi.MarshalledObject"
    },
    {
      "type": "java.rmi.dgc.Lease"
    },
    {
      "type": "java.rmi.dgc.VMID"
    },
    {
      "type": "java.rmi.server.ObjID"
    },
    {
      "type": "java.rmi.server.ObjID[]"
    },
    {
      "type": "java.rmi.server.RemoteObject"
    },
    {
      "type": "java.rmi.server.RemoteStub"
    },
    {
      "type": "java.rmi.server.UID"
    },
    {
      "type": "java.util.ArrayList"
    },
    {
      "type": "java.util.Collections$EmptyList"
    },
    {
      "type": "java.util.HashMap"
    },
    {
      "type": "java.util.HashSet"
    },
    {
      "type": "java.util.LinkedHashMap"
    },
    {
      "type": "java.util.TreeMap"
    },
    {
      "type": "javax.management.InstanceNotFoundException"
    },
    {
      "type": "javax.management.JMException"
    },
    {
      "type": "javax.management.ObjectInstance"
    },
    {
      "type": "javax.management.ObjectName"
    },
    {
      "type": "javax.management.OperationsException"
    },
    {
      "type": "javax.management.openmbean.CompositeDataSupport"
    },
    {
      "type": "javax.management.openmbean.CompositeType"
    },
    {
      "type": "javax.management.openmbean.OpenType"
    },
    {
      "type": "javax.management.openmbean.SimpleType"
    },
    {
      "type": "javax.management.remote.rmi.RMIConnectionImpl_Stub"
    },
    {
      "type": "javax.management.remote.rmi.RMIServerImpl_Stub"
    }
  ],
  "jni": [
    {
      "type": "sun.net.dns.ResolverConfigurationImpl",
      "fields": [
        {
          "name": "os_searchlist"
        },
        {
          "name": "os_nameservers"
        }
      ]
    },
    {
      "type": "[Lcom.sun.management.internal.DiagnosticCommandArgumentInfo;"
    },
    {
      "type": "[Lcom.sun.management.internal.DiagnosticCommandInfo;"
    },
    {
      "type": "com.sun.management.internal.DiagnosticCommandArgumentInfo",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean",
            "boolean",
            "boolean",
            "int"
          ]
        }
      ]
    },
    {
      "type": "com.sun.management.internal.DiagnosticCommandInfo",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "java.lang.String",
            "boolean",
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "io.camunda.rpa.runtime.RpaRuntimeJavaPocApplication",
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.ChannelException"
    },
    {
      "type": "io.netty.channel.DefaultFileRegion",
      "fields": [
        {
          "name": "file"
        },
        {
          "name": "transferred"
        }
      ]
    },
    {
      "type": "io.netty.channel.epoll.LinuxSocket"
    },
    {
      "type": "io.netty.channel.epoll.Native"
    },
    {
      "type": "io.netty.channel.epoll.NativeDatagramPacketArray$NativeDatagramPacket",
      "fields": [
        {
          "name": "count"
        },
        {
          "name": "memoryAddress"
        },
        {
          "name": "recipientAddr"
        },
        {
          "name": "recipientAddrLen"
        },
        {
          "name": "recipientPort"
        },
        {
          "name": "recipientScopeId"
        },
        {
          "name": "segmentSize"
        },
        {
          "name": "senderAddr"
        },
        {
          "name": "senderAddrLen"
        },
        {
          "name": "senderPort"
        },
        {
          "name": "senderScopeId"
        }
      ]
    },
    {
      "type": "io.netty.channel.epoll.NativeStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.channel.unix.Buffer"
    },
    {
      "type": "io.netty.channel.unix.DatagramSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "int",
            "int",
            "int",
            "io.netty.channel.unix.DatagramSocketAddress"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.DomainDatagramSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "byte[]",
            "int",
            "io.netty.channel.unix.DomainDatagramSocketAddress"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.ErrorsStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.channel.unix.FileDescriptor"
    },
    {
      "type": "io.netty.channel.unix.LimitsStaticallyReferencedJniMethods"
    },
    {
      "type": "io.netty.channel.unix.PeerCredentials",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int",
            "int[]"
          ]
        }
      ]
    },
    {
      "type": "io.netty.channel.unix.Socket"
    },
    {
      "type": "java.io.FileDescriptor",
      "fields": [
        {
          "name": "fd"
        }
      ]
    },
    {
      "type": "java.io.IOException"
    },
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.InternalError",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.OutOfMemoryError"
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.net.InetSocketAddress",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.net.PortUnreachableException"
    },
    {
      "type": "java.nio.Buffer",
      "fields": [
        {
          "name": "limit"
        },
        {
          "name": "position"
        }
      ],
      "methods": [
        {
          "name": "limit",
          "parameterTypes": []
        },
        {
          "name": "position",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.nio.DirectByteBuffer"
    },
    {
      "type": "java.nio.channels.ClosedChannelException",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.Arrays",
      "methods": [
        {
          "name": "asList",
          "parameterTypes": [
            "java.lang.Object[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.loader.launch.JarLauncher",
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "sun.instrument.InstrumentationImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "boolean",
            "boolean",
            "boolean"
          ]
        },
        {
          "name": "loadClassAndCallAgentmain",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "loadClassAndCallPremain",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        },
        {
          "name": "transform",
          "parameterTypes": [
            "java.lang.Module",
            "java.lang.ClassLoader",
            "java.lang.String",
            "java.lang.Class",
            "java.security.ProtectionDomain",
            "byte[]",
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "sun.launcher.LauncherHelper",
      "fields": [
        {
          "name": "isStaticMain"
        },
        {
          "name": "noArgMain"
        }
      ],
      "methods": [
        {
          "name": "checkAndLoadMain",
          "parameterTypes": [
            "boolean",
            "int",
            "java.lang.String"
          ]
        },
        {
          "name": "getApplicationClass",
          "parameterTypes": []
        },
        {
          "name": "makePlatformString",
          "parameterTypes": [
            "boolean",
            "byte[]"
          ]
        }
      ]
    },
    {
      "type": "sun.management.VMManagementImpl",
      "fields": [
        {
          "name": "compTimeMonitoringSupport"
        },
        {
          "name": "currentThreadCpuTimeSupport"
        },
        {
          "name": "objectMonitorUsageSupport"
        },
        {
          "name": "otherThreadCpuTimeSupport"
        },
        {
          "name": "remoteDiagnosticCommandsSupport"
        },
        {
          "name": "synchronizerUsageSupport"
        },
        {
          "name": "threadAllocatedMemorySupport"
        },
        {
          "name": "threadContentionMonitoringSupport"
        }
      ]
    },
    {
      "type": "sun.nio.ch.FileChannelImpl",
      "fields": [
        {
          "name": "fd"
        }
      ]
    }
  ]
}