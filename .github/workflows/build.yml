name: Build

on:
  push: {}
  
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    container: "ghcr.io/camunda/rpa-worker-base-image:202501291438"
    permissions:
      contents: read
      packages: write
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with: 
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
        with:
          add-job-summary: 'on-failure'

      - name: Build
        run: |
          ./gradlew setVersion
          ./gradlew build
          ./gradlew deletePlainJar
          
      - name: Upload Unit Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-reports
          path: build/reports/tests/test/
          retention-days: 1
          
      - name: Upload Functional Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: functional-test-reports
          path: build/reports/tests/functionalTest/
          retention-days: 1
      
      - name: Upload JAR
        uses: actions/upload-artifact@v4
        if: github.ref_type == 'tag'
        with:
          name: executable-application-jar
          path: build/libs/*.jar
          retention-days: 1
      
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            build/test-results/**/*.xml
            
#  windows_test:
#    runs-on: windows-2025
#    permissions:
#      contents: read
#      checks: write
#      pull-requests: write
#    
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#          fetch-tags: true
#
#      - name: Setup Gradle
#        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
#        with: 
#          add-job-summary: 'never'
#
#      - name: Build
#        run: |
#          ./gradlew setVersion
#          ./gradlew check
#          
#      - name: Upload Unit Test Results
#        uses: actions/upload-artifact@v4
#        if: always()
#        with:
#          name: unit-test-reports-windows
#          path: build/reports/tests/test/
#          retention-days: 1
#
#      - name: Upload Functional Test Results
#        uses: actions/upload-artifact@v4
#        if: always()
#        with:
#          name: functional-test-reports-windows
#          path: build/reports/tests/functionalTest/
#          retention-days: 1
#          
#      - name: Publish Windows Re-Test Results
#        uses: EnricoMi/publish-unit-test-result-action/windows@v2
#        if: always()
#        with:
#          check_name: 'Windows Test Results'
#          comment_mode: 'off'
#          job_summary: false
#          files: |
#            build/test-results/**/*.xml
#  
#  images:
#    needs: 
#      - build
#      - windows_test
#    if: github.ref_type == 'tag'
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#      id-token: write
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#        
#      - name: Download Artefacts
#        uses: actions/download-artifact@v4
#        with:
#          merge-multiple: true
#
#      - name: Install cosign
#        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
#        with:
#          cosign-release: 'v2.2.4'
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
#        with:
#          platforms: linux/amd64,linux/aarch64
#
#      - name: Log into registry ${{ env.REGISTRY }}
#        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Extract Docker metadata
#        id: meta
#        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#
#      - name: Build and push Docker image
#        id: build-and-push
#        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
#        with:
#          context: .
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#          platforms: linux/amd64,linux/aarch64
#
#      - name: Sign the published Docker image
#        env:
#          TAGS: ${{ steps.meta.outputs.tags }}
#          DIGEST: ${{ steps.build-and-push.outputs.digest }}
#        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
        
  native_linux_amd64:
    needs: 
      - build
#      - windows_test
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build
        run: |
          ./gradlew setVersion
          ./gradlew -PnativePlatform=linux -PnativeArch=amd64 nativeCompile

      - name: Upload Native Binary
        uses: actions/upload-artifact@v4
        with:
          name: native-linux-amd64
          path: build/native/nativeCompile/rpa-worker*
          retention-days: 1
          
#  native_win32_amd64:
#    needs: 
#      - build
#      - windows_test
#    runs-on: windows-2025
#    if: github.ref_type == 'tag'
#    permissions:
#      contents: read
#      
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#          fetch-tags: true
#
#      - name: Setup Gradle
#        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
#
#      - name: Build
#        run: |
#          ./gradlew setVersion
#          ./gradlew -PnativePlatform=win32 -PnativeArch=amd64 nativeCompile
#
#      - name: Upload Native Binary
#        uses: actions/upload-artifact@v4
#        with:
#          name: native-win32-amd64
#          path: build/native/nativeCompile/rpa-worker*
#          retention-days: 1
#          
#  native_darwin_amd64:
#    needs:
#      - build
#      - windows_test
#    runs-on: macos-13
#    if: github.ref_type == 'tag'
#    permissions:
#      contents: read
#    
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#          fetch-tags: true
#
#      - name: Setup Gradle
#        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
#
#      - name: Build
#        run: |
#          ./gradlew setVersion
#          ./gradlew -PnativePlatform=darwin -PnativeArch=amd64 nativeCompile
#
#      - name: Upload Native Binary
#        uses: actions/upload-artifact@v4
#        with:
#          name: native-darwin-amd64
#          path: build/native/nativeCompile/rpa-worker*
#          retention-days: 1
#          
#  native_darwin_aarch64:
#    needs:
#      - build
#      - windows_test
#    runs-on: macos-latest
#    if: github.ref_type == 'tag'
#    permissions:
#      contents: read
#    
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#          fetch-tags: true
#
#      - name: Setup Gradle
#        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
#
#      - name: Build
#        run: |
#          ./gradlew setVersion
#          ./gradlew -PnativePlatform=darwin -PnativeArch=aarch64 nativeCompile
#
#      - name: Upload Native Binary
#        uses: actions/upload-artifact@v4
#        with:
#          name: native-darwin-aarch64
#          path: build/native/nativeCompile/rpa-worker*
#          retention-days: 1
          
  e2e:
    needs:
      - build
#      - windows_test
#      - images
      - native_linux_amd64
#      - native_win32_amd64
#      - native_darwin_amd64
#      - native_darwin_aarch64
    runs-on: ubuntu-latest
    env: 
      E2E: "1"
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Download Artefacts
        uses: actions/download-artifact@v4
        with:
          name: native-linux-amd64
          
      - name: Build
        run: |
          ./gradlew :rpa-worker-e2e-tests:check

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-reports
          path: build/reports/tests/
          retention-days: 1
          
  release:
    needs:
      - e2e
    if: github.ref_type == 'tag' && ! contains(github.ref_name, 'dev')
    runs-on: ubuntu-latest
    container: "ghcr.io/camunda/rpa-worker-base-image:202501291438"
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      
      - name: Download Artefacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          
      - name: Generate Release Header
        run: |
          ./gradlew setVersion
          ./gradlew generateReleaseHeader
      
      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: |
            rpa-worker*linux_amd64
            rpa-worker*win32_amd64.exe
            rpa-worker*darwin*
            *.jar
          prerelease: ${{ contains(github.ref_name, '-') }}
          preserve_order: true
          generate_release_notes: true
          body_path: build/releasenotes_header.md
    